{"ast":null,"code":"const API_BASE_URL = 'https://fakestoreapi.com';\n\n// API Service for external product data\nexport const productAPI = {\n  // Get all products\n  getAllProducts: async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/products`);\n      if (!response.ok) throw new Error('Failed to fetch products');\n      const products = await response.json();\n      return transformProducts(products);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      return getFallbackProducts();\n    }\n  },\n  // Get limited products for featured section\n  getFeaturedProducts: async (limit = 4) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/products?limit=${limit}`);\n      if (!response.ok) throw new Error('Failed to fetch featured products');\n      const products = await response.json();\n      return transformProducts(products);\n    } catch (error) {\n      console.error('Error fetching featured products:', error);\n      return getFallbackProducts().slice(0, limit);\n    }\n  },\n  // Get products by category\n  getProductsByCategory: async category => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/products/category/${category}`);\n      if (!response.ok) throw new Error('Failed to fetch products by category');\n      const products = await response.json();\n      return transformProducts(products);\n    } catch (error) {\n      console.error('Error fetching products by category:', error);\n      return getFallbackProducts().filter(p => p.originalCategory === category);\n    }\n  },\n  // Get single product\n  getProduct: async id => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/products/${id}`);\n      if (!response.ok) throw new Error('Failed to fetch product');\n      const product = await response.json();\n      return transformProduct(product);\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      return getFallbackProducts().find(p => p.id === parseInt(id));\n    }\n  },\n  // Get all categories\n  getCategories: async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/products/categories`);\n      if (!response.ok) throw new Error('Failed to fetch categories');\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      return ['electronics', 'jewelery', \"men's clothing\", \"women's clothing\"];\n    }\n  }\n};\n\n// Transform API product data to match our app structure\nconst transformProduct = apiProduct => {\n  var _apiProduct$rating, _apiProduct$rating2;\n  return {\n    id: apiProduct.id,\n    name: apiProduct.title,\n    description: apiProduct.description,\n    price: Math.round(apiProduct.price),\n    originalPrice: Math.round(apiProduct.price * 1.2),\n    // Add 20% as original price\n    category: mapApiCategory(apiProduct.category),\n    originalCategory: apiProduct.category,\n    tags: generateTags(apiProduct.category, apiProduct.price),\n    image: apiProduct.image,\n    images: [{\n      url: apiProduct.image,\n      alt: apiProduct.title,\n      isPrimary: true\n    }],\n    rating: {\n      average: ((_apiProduct$rating = apiProduct.rating) === null || _apiProduct$rating === void 0 ? void 0 : _apiProduct$rating.rate) || 4.0,\n      count: ((_apiProduct$rating2 = apiProduct.rating) === null || _apiProduct$rating2 === void 0 ? void 0 : _apiProduct$rating2.count) || Math.floor(Math.random() * 200) + 50\n    },\n    stock: Math.floor(Math.random() * 50) + 10,\n    colors: generateColors(apiProduct.category),\n    sizes: generateSizes(apiProduct.category),\n    features: generateFeatures(apiProduct.category),\n    isActive: true,\n    isFeatured: Math.random() > 0.7 // 30% chance to be featured\n  };\n};\nconst transformProducts = apiProducts => {\n  return apiProducts.map(transformProduct);\n};\n\n// Map API categories to our internal categories\nconst mapApiCategory = apiCategory => {\n  const categoryMap = {\n    \"men's clothing\": 'clothes',\n    \"women's clothing\": 'clothes',\n    \"jewelery\": 'accessories',\n    \"electronics\": 'accessories'\n  };\n  return categoryMap[apiCategory] || 'accessories';\n};\n\n// Generate relevant tags based on category and price\nconst generateTags = (category, price) => {\n  const baseTags = ['new'];\n  if (price < 20) baseTags.push('sale');\n  if (price > 100) baseTags.push('premium');\n  const categoryTags = {\n    \"men's clothing\": ['formal', 'casual'],\n    \"women's clothing\": ['trendy', 'casual'],\n    \"jewelery\": ['luxury', 'elegant'],\n    \"electronics\": ['tech', 'modern']\n  };\n  return [...baseTags, ...(categoryTags[category] || [])];\n};\n\n// Generate colors based on category\nconst generateColors = category => {\n  const colorSets = {\n    \"men's clothing\": ['Black', 'Navy', 'Gray', 'White'],\n    \"women's clothing\": ['Black', 'White', 'Red', 'Pink', 'Blue'],\n    \"jewelery\": ['Gold', 'Silver', 'Rose Gold'],\n    \"electronics\": ['Black', 'White', 'Silver']\n  };\n  return colorSets[category] || ['Black', 'White'];\n};\n\n// Generate sizes based on category\nconst generateSizes = category => {\n  const sizeSets = {\n    \"men's clothing\": ['S', 'M', 'L', 'XL', 'XXL'],\n    \"women's clothing\": ['XS', 'S', 'M', 'L', 'XL'],\n    \"jewelery\": ['One Size'],\n    \"electronics\": ['One Size']\n  };\n  const sizes = sizeSets[category] || ['One Size'];\n  return sizes.map(size => ({\n    size,\n    stock: Math.floor(Math.random() * 20) + 5\n  }));\n};\n\n// Generate features based on category\nconst generateFeatures = category => {\n  const featureSets = {\n    \"men's clothing\": ['Premium Quality', 'Comfortable Fit', 'Durable Material', 'Easy Care'],\n    \"women's clothing\": ['Trendy Design', 'Comfortable Fit', 'Premium Fabric', 'Versatile Style'],\n    \"jewelery\": ['Premium Materials', 'Elegant Design', 'Hypoallergenic', 'Gift Box Included'],\n    \"electronics\": ['Latest Technology', 'High Performance', 'User Friendly', 'Warranty Included']\n  };\n  return featureSets[category] || ['High Quality', 'Great Value', 'Customer Favorite'];\n};\n\n// Fallback products if API fails\nconst getFallbackProducts = () => [{\n  id: 1,\n  name: 'Classic White Shirt',\n  description: 'A timeless white button-down shirt',\n  price: 89,\n  originalPrice: 120,\n  category: 'clothes',\n  originalCategory: \"men's clothing\",\n  tags: ['new', 'formal'],\n  image: 'https://via.placeholder.com/300x300?text=White+Shirt',\n  images: [{\n    url: 'https://via.placeholder.com/300x300?text=White+Shirt',\n    alt: 'White Shirt',\n    isPrimary: true\n  }],\n  rating: {\n    average: 4.5,\n    count: 128\n  },\n  stock: 25,\n  colors: ['White', 'Light Blue'],\n  sizes: [{\n    size: 'M',\n    stock: 10\n  }, {\n    size: 'L',\n    stock: 15\n  }],\n  features: ['Premium Cotton', 'Classic Fit', 'Easy Care'],\n  isActive: true,\n  isFeatured: true\n}, {\n  id: 2,\n  name: 'Leather Boots',\n  description: 'Premium leather boots',\n  price: 159,\n  originalPrice: 199,\n  category: 'shoes',\n  originalCategory: \"men's clothing\",\n  tags: ['sale', 'premium'],\n  image: 'https://via.placeholder.com/300x300?text=Leather+Boots',\n  images: [{\n    url: 'https://via.placeholder.com/300x300?text=Leather+Boots',\n    alt: 'Leather Boots',\n    isPrimary: true\n  }],\n  rating: {\n    average: 4.8,\n    count: 95\n  },\n  stock: 15,\n  colors: ['Black', 'Brown'],\n  sizes: [{\n    size: '42',\n    stock: 5\n  }, {\n    size: '43',\n    stock: 10\n  }],\n  features: ['Genuine Leather', 'Comfortable', 'Durable'],\n  isActive: true,\n  isFeatured: true\n}];\nexport default productAPI;","map":{"version":3,"names":["API_BASE_URL","productAPI","getAllProducts","response","fetch","ok","Error","products","json","transformProducts","error","console","getFallbackProducts","getFeaturedProducts","limit","slice","getProductsByCategory","category","filter","p","originalCategory","getProduct","id","product","transformProduct","find","parseInt","getCategories","apiProduct","_apiProduct$rating","_apiProduct$rating2","name","title","description","price","Math","round","originalPrice","mapApiCategory","tags","generateTags","image","images","url","alt","isPrimary","rating","average","rate","count","floor","random","stock","colors","generateColors","sizes","generateSizes","features","generateFeatures","isActive","isFeatured","apiProducts","map","apiCategory","categoryMap","baseTags","push","categoryTags","colorSets","sizeSets","size","featureSets"],"sources":["C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/src/services/productAPI.js"],"sourcesContent":["const API_BASE_URL = 'https://fakestoreapi.com';\r\n\r\n// API Service for external product data\r\nexport const productAPI = {\r\n  // Get all products\r\n  getAllProducts: async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/products`);\r\n      if (!response.ok) throw new Error('Failed to fetch products');\r\n      const products = await response.json();\r\n      return transformProducts(products);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n      return getFallbackProducts();\r\n    }\r\n  },\r\n\r\n  // Get limited products for featured section\r\n  getFeaturedProducts: async (limit = 4) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/products?limit=${limit}`);\r\n      if (!response.ok) throw new Error('Failed to fetch featured products');\r\n      const products = await response.json();\r\n      return transformProducts(products);\r\n    } catch (error) {\r\n      console.error('Error fetching featured products:', error);\r\n      return getFallbackProducts().slice(0, limit);\r\n    }\r\n  },\r\n\r\n  // Get products by category\r\n  getProductsByCategory: async (category) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/products/category/${category}`);\r\n      if (!response.ok) throw new Error('Failed to fetch products by category');\r\n      const products = await response.json();\r\n      return transformProducts(products);\r\n    } catch (error) {\r\n      console.error('Error fetching products by category:', error);\r\n      return getFallbackProducts().filter(p => p.originalCategory === category);\r\n    }\r\n  },\r\n\r\n  // Get single product\r\n  getProduct: async (id) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/products/${id}`);\r\n      if (!response.ok) throw new Error('Failed to fetch product');\r\n      const product = await response.json();\r\n      return transformProduct(product);\r\n    } catch (error) {\r\n      console.error('Error fetching product:', error);\r\n      return getFallbackProducts().find(p => p.id === parseInt(id));\r\n    }\r\n  },\r\n\r\n  // Get all categories\r\n  getCategories: async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/products/categories`);\r\n      if (!response.ok) throw new Error('Failed to fetch categories');\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n      return ['electronics', 'jewelery', \"men's clothing\", \"women's clothing\"];\r\n    }\r\n  }\r\n};\r\n\r\n// Transform API product data to match our app structure\r\nconst transformProduct = (apiProduct) => ({\r\n  id: apiProduct.id,\r\n  name: apiProduct.title,\r\n  description: apiProduct.description,\r\n  price: Math.round(apiProduct.price),\r\n  originalPrice: Math.round(apiProduct.price * 1.2), // Add 20% as original price\r\n  category: mapApiCategory(apiProduct.category),\r\n  originalCategory: apiProduct.category,\r\n  tags: generateTags(apiProduct.category, apiProduct.price),\r\n  image: apiProduct.image,\r\n  images: [\r\n    { url: apiProduct.image, alt: apiProduct.title, isPrimary: true }\r\n  ],\r\n  rating: {\r\n    average: apiProduct.rating?.rate || 4.0,\r\n    count: apiProduct.rating?.count || Math.floor(Math.random() * 200) + 50\r\n  },\r\n  stock: Math.floor(Math.random() * 50) + 10,\r\n  colors: generateColors(apiProduct.category),\r\n  sizes: generateSizes(apiProduct.category),\r\n  features: generateFeatures(apiProduct.category),\r\n  isActive: true,\r\n  isFeatured: Math.random() > 0.7 // 30% chance to be featured\r\n});\r\n\r\nconst transformProducts = (apiProducts) => {\r\n  return apiProducts.map(transformProduct);\r\n};\r\n\r\n// Map API categories to our internal categories\r\nconst mapApiCategory = (apiCategory) => {\r\n  const categoryMap = {\r\n    \"men's clothing\": 'clothes',\r\n    \"women's clothing\": 'clothes',\r\n    \"jewelery\": 'accessories',\r\n    \"electronics\": 'accessories'\r\n  };\r\n  return categoryMap[apiCategory] || 'accessories';\r\n};\r\n\r\n// Generate relevant tags based on category and price\r\nconst generateTags = (category, price) => {\r\n  const baseTags = ['new'];\r\n  \r\n  if (price < 20) baseTags.push('sale');\r\n  if (price > 100) baseTags.push('premium');\r\n  \r\n  const categoryTags = {\r\n    \"men's clothing\": ['formal', 'casual'],\r\n    \"women's clothing\": ['trendy', 'casual'],\r\n    \"jewelery\": ['luxury', 'elegant'],\r\n    \"electronics\": ['tech', 'modern']\r\n  };\r\n  \r\n  return [...baseTags, ...(categoryTags[category] || [])];\r\n};\r\n\r\n// Generate colors based on category\r\nconst generateColors = (category) => {\r\n  const colorSets = {\r\n    \"men's clothing\": ['Black', 'Navy', 'Gray', 'White'],\r\n    \"women's clothing\": ['Black', 'White', 'Red', 'Pink', 'Blue'],\r\n    \"jewelery\": ['Gold', 'Silver', 'Rose Gold'],\r\n    \"electronics\": ['Black', 'White', 'Silver']\r\n  };\r\n  \r\n  return colorSets[category] || ['Black', 'White'];\r\n};\r\n\r\n// Generate sizes based on category\r\nconst generateSizes = (category) => {\r\n  const sizeSets = {\r\n    \"men's clothing\": ['S', 'M', 'L', 'XL', 'XXL'],\r\n    \"women's clothing\": ['XS', 'S', 'M', 'L', 'XL'],\r\n    \"jewelery\": ['One Size'],\r\n    \"electronics\": ['One Size']\r\n  };\r\n  \r\n  const sizes = sizeSets[category] || ['One Size'];\r\n  return sizes.map(size => ({ size, stock: Math.floor(Math.random() * 20) + 5 }));\r\n};\r\n\r\n// Generate features based on category\r\nconst generateFeatures = (category) => {\r\n  const featureSets = {\r\n    \"men's clothing\": ['Premium Quality', 'Comfortable Fit', 'Durable Material', 'Easy Care'],\r\n    \"women's clothing\": ['Trendy Design', 'Comfortable Fit', 'Premium Fabric', 'Versatile Style'],\r\n    \"jewelery\": ['Premium Materials', 'Elegant Design', 'Hypoallergenic', 'Gift Box Included'],\r\n    \"electronics\": ['Latest Technology', 'High Performance', 'User Friendly', 'Warranty Included']\r\n  };\r\n  \r\n  return featureSets[category] || ['High Quality', 'Great Value', 'Customer Favorite'];\r\n};\r\n\r\n// Fallback products if API fails\r\nconst getFallbackProducts = () => [\r\n  {\r\n    id: 1,\r\n    name: 'Classic White Shirt',\r\n    description: 'A timeless white button-down shirt',\r\n    price: 89,\r\n    originalPrice: 120,\r\n    category: 'clothes',\r\n    originalCategory: \"men's clothing\",\r\n    tags: ['new', 'formal'],\r\n    image: 'https://via.placeholder.com/300x300?text=White+Shirt',\r\n    images: [{ url: 'https://via.placeholder.com/300x300?text=White+Shirt', alt: 'White Shirt', isPrimary: true }],\r\n    rating: { average: 4.5, count: 128 },\r\n    stock: 25,\r\n    colors: ['White', 'Light Blue'],\r\n    sizes: [{ size: 'M', stock: 10 }, { size: 'L', stock: 15 }],\r\n    features: ['Premium Cotton', 'Classic Fit', 'Easy Care'],\r\n    isActive: true,\r\n    isFeatured: true\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Leather Boots',\r\n    description: 'Premium leather boots',\r\n    price: 159,\r\n    originalPrice: 199,\r\n    category: 'shoes',\r\n    originalCategory: \"men's clothing\",\r\n    tags: ['sale', 'premium'],\r\n    image: 'https://via.placeholder.com/300x300?text=Leather+Boots',\r\n    images: [{ url: 'https://via.placeholder.com/300x300?text=Leather+Boots', alt: 'Leather Boots', isPrimary: true }],\r\n    rating: { average: 4.8, count: 95 },\r\n    stock: 15,\r\n    colors: ['Black', 'Brown'],\r\n    sizes: [{ size: '42', stock: 5 }, { size: '43', stock: 10 }],\r\n    features: ['Genuine Leather', 'Comfortable', 'Durable'],\r\n    isActive: true,\r\n    isFeatured: true\r\n  }\r\n];\r\n\r\nexport default productAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\context\\\\AdminContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminContext = /*#__PURE__*/createContext();\nconst adminReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_STATS':\n      return {\n        ...state,\n        stats: action.payload\n      };\n    case 'SET_RECENT_ORDERS':\n      return {\n        ...state,\n        recentOrders: action.payload\n      };\n    case 'SET_USERS':\n      return {\n        ...state,\n        users: action.payload\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        users: state.users.map(user => user.id === action.payload.id ? action.payload : user)\n      };\n    case 'DELETE_USER':\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  loading: true,\n  stats: {\n    totalOrders: 0,\n    totalRevenue: 0,\n    totalUsers: 0,\n    totalProducts: 0,\n    pendingOrders: 0,\n    monthlyGrowth: 0\n  },\n  recentOrders: [],\n  users: []\n};\nexport const AdminProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(adminReducer, initialState);\n\n  // Load admin data on mount\n  useEffect(() => {\n    loadAdminData();\n  }, []);\n  const loadAdminData = async () => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      // Simulate loading admin data\n      setTimeout(() => {\n        const mockStats = {\n          totalOrders: 1247,\n          totalRevenue: 89250.75,\n          totalUsers: 3892,\n          totalProducts: 156,\n          pendingOrders: 23,\n          monthlyGrowth: 12.5\n        };\n        const mockRecentOrders = [{\n          id: 'ORD-001',\n          customer: 'John Doe',\n          email: 'john@example.com',\n          total: 129.99,\n          status: 'pending',\n          date: new Date().toISOString(),\n          items: 2\n        }, {\n          id: 'ORD-002',\n          customer: 'Sarah Wilson',\n          email: 'sarah@example.com',\n          total: 89.50,\n          status: 'processing',\n          date: new Date(Date.now() - 3600000).toISOString(),\n          items: 1\n        }, {\n          id: 'ORD-003',\n          customer: 'Mike Johnson',\n          email: 'mike@example.com',\n          total: 299.99,\n          status: 'shipped',\n          date: new Date(Date.now() - 7200000).toISOString(),\n          items: 3\n        }];\n        const mockUsers = [{\n          id: '1',\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'john@example.com',\n          role: 'customer',\n          status: 'active',\n          joinDate: '2024-01-15',\n          lastLogin: '2024-03-20',\n          orders: 5,\n          totalSpent: 450.00\n        }, {\n          id: '2',\n          firstName: 'Sarah',\n          lastName: 'Wilson',\n          email: 'sarah@example.com',\n          role: 'customer',\n          status: 'active',\n          joinDate: '2024-02-10',\n          lastLogin: '2024-03-21',\n          orders: 3,\n          totalSpent: 299.50\n        }, {\n          id: '3',\n          firstName: 'Admin',\n          lastName: 'User',\n          email: 'admin@example.com',\n          role: 'admin',\n          status: 'active',\n          joinDate: '2023-12-01',\n          lastLogin: '2024-03-22',\n          orders: 0,\n          totalSpent: 0\n        }];\n        dispatch({\n          type: 'SET_STATS',\n          payload: mockStats\n        });\n        dispatch({\n          type: 'SET_RECENT_ORDERS',\n          payload: mockRecentOrders\n        });\n        dispatch({\n          type: 'SET_USERS',\n          payload: mockUsers\n        });\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }, 1000);\n    } catch (error) {\n      console.error('Error loading admin data:', error);\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n  const updateOrderStatus = (orderId, status) => {\n    // In a real app, make API call to update order status\n    const updatedOrders = state.recentOrders.map(order => order.id === orderId ? {\n      ...order,\n      status\n    } : order);\n    dispatch({\n      type: 'SET_RECENT_ORDERS',\n      payload: updatedOrders\n    });\n  };\n  const updateUserRole = (userId, role) => {\n    const user = state.users.find(u => u.id === userId);\n    if (user) {\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: {\n          ...user,\n          role\n        }\n      });\n    }\n  };\n  const updateUserStatus = (userId, status) => {\n    const user = state.users.find(u => u.id === userId);\n    if (user) {\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: {\n          ...user,\n          status\n        }\n      });\n    }\n  };\n  const deleteUser = userId => {\n    dispatch({\n      type: 'DELETE_USER',\n      payload: userId\n    });\n  };\n  const isAdmin = user => {\n    return user && user.email === 'admin@example.com';\n  };\n  const value = {\n    ...state,\n    updateOrderStatus,\n    updateUserRole,\n    updateUserStatus,\n    deleteUser,\n    isAdmin,\n    refreshData: loadAdminData\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AdminProvider;\nexport const useAdmin = () => {\n  _s2();\n  const context = useContext(AdminContext);\n  if (!context) {\n    throw new Error('useAdmin must be used within an AdminProvider');\n  }\n  return context;\n};\n_s2(useAdmin, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AdminContext;\nvar _c;\n$RefreshReg$(_c, \"AdminProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","AdminContext","adminReducer","state","action","type","loading","payload","stats","recentOrders","users","map","user","id","filter","initialState","totalOrders","totalRevenue","totalUsers","totalProducts","pendingOrders","monthlyGrowth","AdminProvider","children","_s","dispatch","loadAdminData","setTimeout","mockStats","mockRecentOrders","customer","email","total","status","date","Date","toISOString","items","now","mockUsers","firstName","lastName","role","joinDate","lastLogin","orders","totalSpent","error","console","updateOrderStatus","orderId","updatedOrders","order","updateUserRole","userId","find","u","updateUserStatus","deleteUser","isAdmin","value","refreshData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAdmin","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/src/context/AdminContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst AdminContext = createContext();\r\n\r\nconst adminReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n\r\n    case 'SET_STATS':\r\n      return {\r\n        ...state,\r\n        stats: action.payload\r\n      };\r\n\r\n    case 'SET_RECENT_ORDERS':\r\n      return {\r\n        ...state,\r\n        recentOrders: action.payload\r\n      };\r\n\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(user => \r\n          user.id === action.payload.id ? action.payload : user\r\n        )\r\n      };\r\n\r\n    case 'DELETE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user.id !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  stats: {\r\n    totalOrders: 0,\r\n    totalRevenue: 0,\r\n    totalUsers: 0,\r\n    totalProducts: 0,\r\n    pendingOrders: 0,\r\n    monthlyGrowth: 0\r\n  },\r\n  recentOrders: [],\r\n  users: []\r\n};\r\n\r\nexport const AdminProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(adminReducer, initialState);\r\n\r\n  // Load admin data on mount\r\n  useEffect(() => {\r\n    loadAdminData();\r\n  }, []);\r\n\r\n  const loadAdminData = async () => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    \r\n    try {\r\n      // Simulate loading admin data\r\n      setTimeout(() => {\r\n        const mockStats = {\r\n          totalOrders: 1247,\r\n          totalRevenue: 89250.75,\r\n          totalUsers: 3892,\r\n          totalProducts: 156,\r\n          pendingOrders: 23,\r\n          monthlyGrowth: 12.5\r\n        };\r\n\r\n        const mockRecentOrders = [\r\n          {\r\n            id: 'ORD-001',\r\n            customer: 'John Doe',\r\n            email: 'john@example.com',\r\n            total: 129.99,\r\n            status: 'pending',\r\n            date: new Date().toISOString(),\r\n            items: 2\r\n          },\r\n          {\r\n            id: 'ORD-002',\r\n            customer: 'Sarah Wilson',\r\n            email: 'sarah@example.com',\r\n            total: 89.50,\r\n            status: 'processing',\r\n            date: new Date(Date.now() - 3600000).toISOString(),\r\n            items: 1\r\n          },\r\n          {\r\n            id: 'ORD-003',\r\n            customer: 'Mike Johnson',\r\n            email: 'mike@example.com',\r\n            total: 299.99,\r\n            status: 'shipped',\r\n            date: new Date(Date.now() - 7200000).toISOString(),\r\n            items: 3\r\n          }\r\n        ];\r\n\r\n        const mockUsers = [\r\n          {\r\n            id: '1',\r\n            firstName: 'John',\r\n            lastName: 'Doe',\r\n            email: 'john@example.com',\r\n            role: 'customer',\r\n            status: 'active',\r\n            joinDate: '2024-01-15',\r\n            lastLogin: '2024-03-20',\r\n            orders: 5,\r\n            totalSpent: 450.00\r\n          },\r\n          {\r\n            id: '2',\r\n            firstName: 'Sarah',\r\n            lastName: 'Wilson',\r\n            email: 'sarah@example.com',\r\n            role: 'customer',\r\n            status: 'active',\r\n            joinDate: '2024-02-10',\r\n            lastLogin: '2024-03-21',\r\n            orders: 3,\r\n            totalSpent: 299.50\r\n          },\r\n          {\r\n            id: '3',\r\n            firstName: 'Admin',\r\n            lastName: 'User',\r\n            email: 'admin@example.com',\r\n            role: 'admin',\r\n            status: 'active',\r\n            joinDate: '2023-12-01',\r\n            lastLogin: '2024-03-22',\r\n            orders: 0,\r\n            totalSpent: 0\r\n          }\r\n        ];\r\n\r\n        dispatch({ type: 'SET_STATS', payload: mockStats });\r\n        dispatch({ type: 'SET_RECENT_ORDERS', payload: mockRecentOrders });\r\n        dispatch({ type: 'SET_USERS', payload: mockUsers });\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error('Error loading admin data:', error);\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const updateOrderStatus = (orderId, status) => {\r\n    // In a real app, make API call to update order status\r\n    const updatedOrders = state.recentOrders.map(order =>\r\n      order.id === orderId ? { ...order, status } : order\r\n    );\r\n    dispatch({ type: 'SET_RECENT_ORDERS', payload: updatedOrders });\r\n  };\r\n\r\n  const updateUserRole = (userId, role) => {\r\n    const user = state.users.find(u => u.id === userId);\r\n    if (user) {\r\n      dispatch({ type: 'UPDATE_USER', payload: { ...user, role } });\r\n    }\r\n  };\r\n\r\n  const updateUserStatus = (userId, status) => {\r\n    const user = state.users.find(u => u.id === userId);\r\n    if (user) {\r\n      dispatch({ type: 'UPDATE_USER', payload: { ...user, status } });\r\n    }\r\n  };\r\n\r\n  const deleteUser = (userId) => {\r\n    dispatch({ type: 'DELETE_USER', payload: userId });\r\n  };\r\n\r\n  const isAdmin = (user) => {\r\n    return user && user.email === 'admin@example.com';\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    updateOrderStatus,\r\n    updateUserRole,\r\n    updateUserStatus,\r\n    deleteUser,\r\n    isAdmin,\r\n    refreshData: loadAdminData\r\n  };\r\n\r\n  return (\r\n    <AdminContext.Provider value={value}>\r\n      {children}\r\n    </AdminContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAdmin = () => {\r\n  const context = useContext(AdminContext);\r\n  if (!context) {\r\n    throw new Error('useAdmin must be used within an AdminProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AdminContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
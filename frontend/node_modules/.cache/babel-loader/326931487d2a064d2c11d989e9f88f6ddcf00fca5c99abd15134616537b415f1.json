{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\context\\\\SearchContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport localProductService from '../services/localProductService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContext = /*#__PURE__*/createContext();\nexport const useSearch = () => {\n  _s();\n  const context = useContext(SearchContext);\n  if (!context) {\n    throw new Error('useSearch must be used within a SearchProvider');\n  }\n  return context;\n};\n_s(useSearch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SearchProvider = ({\n  children\n}) => {\n  _s2();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchSuggestions, setSuggestions] = useState([]);\n  const [recentSearches, setRecentSearches] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [filters, setFilters] = useState({\n    category: '',\n    priceRange: [0, 1000],\n    brand: '',\n    size: '',\n    color: '',\n    rating: 0,\n    inStock: false,\n    onSale: false\n  });\n  const [sortBy, setSortBy] = useState('relevance');\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Available filter options\n  const [filterOptions, setFilterOptions] = useState({\n    categories: [],\n    brands: [],\n    sizes: [],\n    colors: [],\n    priceRanges: [{\n      label: 'Under $25',\n      min: 0,\n      max: 25\n    }, {\n      label: '$25 - $50',\n      min: 25,\n      max: 50\n    }, {\n      label: '$50 - $100',\n      min: 50,\n      max: 100\n    }, {\n      label: '$100 - $200',\n      min: 100,\n      max: 200\n    }, {\n      label: 'Over $200',\n      min: 200,\n      max: 1000\n    }]\n  });\n\n  // Sort options\n  const sortOptions = [{\n    value: 'relevance',\n    label: 'Best Match'\n  }, {\n    value: 'price_low',\n    label: 'Price: Low to High'\n  }, {\n    value: 'price_high',\n    label: 'Price: High to Low'\n  }, {\n    value: 'rating',\n    label: 'Customer Rating'\n  }, {\n    value: 'newest',\n    label: 'Newest First'\n  }, {\n    value: 'popular',\n    label: 'Most Popular'\n  }, {\n    value: 'name_asc',\n    label: 'Name: A to Z'\n  }, {\n    value: 'name_desc',\n    label: 'Name: Z to A'\n  }];\n\n  // Load recent searches from localStorage\n  useEffect(() => {\n    const savedSearches = localStorage.getItem('recentSearches');\n    if (savedSearches) {\n      setRecentSearches(JSON.parse(savedSearches));\n    }\n  }, []);\n\n  // Load filter options from products\n  useEffect(() => {\n    const loadFilterOptions = async () => {\n      try {\n        const products = await localProductService.getAllProducts();\n        const categories = [...new Set(products.map(p => p.category))];\n        const brands = [...new Set(products.map(p => p.brand).filter(Boolean))];\n        const sizes = [...new Set(products.flatMap(p => p.sizes || []))];\n        const colors = [...new Set(products.flatMap(p => p.colors || []))];\n        setFilterOptions(prev => ({\n          ...prev,\n          categories,\n          brands,\n          sizes,\n          colors\n        }));\n      } catch (error) {\n        console.error('Error loading filter options:', error);\n      }\n    };\n    loadFilterOptions();\n\n    // Load all products initially\n    const loadInitialProducts = async () => {\n      try {\n        const products = await localProductService.getAllProducts();\n        if (Array.isArray(products)) {\n          setSearchResults(products);\n        }\n      } catch (error) {\n        console.error('Error loading initial products:', error);\n        setSearchResults([]);\n      }\n    };\n    loadInitialProducts();\n  }, []);\n\n  // Perform search with debouncing\n  useEffect(() => {\n    console.log('SearchContext: searchQuery changed to:', searchQuery); // Debug log\n    const debounceTimer = setTimeout(() => {\n      console.log('SearchContext: Performing search for:', searchQuery || 'empty query'); // Debug log\n      performSearch(searchQuery || '');\n    }, 300);\n    return () => clearTimeout(debounceTimer);\n  }, [searchQuery, filters, sortBy]);\n\n  // Generate search suggestions\n  useEffect(() => {\n    const generateSuggestions = async () => {\n      if (!searchQuery || searchQuery.length < 2) {\n        setSuggestions([]);\n        return;\n      }\n      try {\n        const products = await localProductService.getAllProducts();\n        if (!Array.isArray(products)) {\n          console.warn('generateSuggestions: products is not an array:', products);\n          setSuggestions([]);\n          return;\n        }\n        const suggestions = [];\n        const searchLower = searchQuery.toLowerCase().trim();\n\n        // Product name suggestions with null checks\n        products.forEach(product => {\n          try {\n            if (product !== null && product !== void 0 && product.name && typeof product.name === 'string') {\n              if (product.name.toLowerCase().includes(searchLower)) {\n                suggestions.push({\n                  type: 'product',\n                  text: product.name,\n                  category: product.category || 'uncategorized',\n                  id: product.id\n                });\n              }\n            }\n          } catch (error) {\n            console.warn('Error processing product suggestion:', product, error);\n          }\n        });\n\n        // Category suggestions with null checks\n        if (Array.isArray(filterOptions.categories)) {\n          filterOptions.categories.forEach(category => {\n            try {\n              if (category && typeof category === 'string') {\n                if (category.toLowerCase().includes(searchLower)) {\n                  suggestions.push({\n                    type: 'category',\n                    text: category,\n                    category: category\n                  });\n                }\n              }\n            } catch (error) {\n              console.warn('Error processing category suggestion:', category, error);\n            }\n          });\n        }\n\n        // Brand suggestions with null checks\n        if (Array.isArray(filterOptions.brands)) {\n          filterOptions.brands.forEach(brand => {\n            try {\n              if (brand && typeof brand === 'string') {\n                if (brand.toLowerCase().includes(searchLower)) {\n                  suggestions.push({\n                    type: 'brand',\n                    text: brand,\n                    category: 'brand'\n                  });\n                }\n              }\n            } catch (error) {\n              console.warn('Error processing brand suggestion:', brand, error);\n            }\n          });\n        }\n        setSuggestions(suggestions.slice(0, 8));\n      } catch (error) {\n        console.error('Error generating suggestions:', error);\n        setSuggestions([]);\n      }\n    };\n    const debounceTimer = setTimeout(generateSuggestions, 200);\n    return () => clearTimeout(debounceTimer);\n  }, [searchQuery, filterOptions]);\n  const performSearch = async query => {\n    setIsSearching(true);\n    try {\n      const products = await localProductService.getAllProducts();\n\n      // Validate products array\n      if (!Array.isArray(products)) {\n        console.warn('Products is not an array:', products);\n        setSearchResults([]);\n        return;\n      }\n      let results = [...products]; // Create a copy to avoid mutations\n\n      // Text search with better error handling\n      if (query && query.trim()) {\n        const searchTerms = query.toLowerCase().split(' ').filter(term => term.length > 0);\n        results = results.filter(product => {\n          try {\n            // Safely build searchable text with null checks\n            const name = (product === null || product === void 0 ? void 0 : product.name) || '';\n            const description = (product === null || product === void 0 ? void 0 : product.description) || '';\n            const category = (product === null || product === void 0 ? void 0 : product.category) || '';\n            const brand = (product === null || product === void 0 ? void 0 : product.brand) || '';\n            const tags = Array.isArray(product === null || product === void 0 ? void 0 : product.tags) ? product.tags.join(' ') : '';\n            const searchableText = `${name} ${description} ${category} ${brand} ${tags}`.toLowerCase();\n            return searchTerms.every(term => searchableText.includes(term));\n          } catch (filterError) {\n            console.warn('Error filtering product:', product, filterError);\n            return false;\n          }\n        });\n      }\n\n      // Apply filters with null checks\n      if (filters.category) {\n        results = results.filter(p => (p === null || p === void 0 ? void 0 : p.category) === filters.category);\n      }\n      if (filters.brand) {\n        results = results.filter(p => (p === null || p === void 0 ? void 0 : p.brand) === filters.brand);\n      }\n      if (filters.size) {\n        results = results.filter(p => Array.isArray(p === null || p === void 0 ? void 0 : p.sizes) && p.sizes.includes(filters.size));\n      }\n      if (filters.color) {\n        results = results.filter(p => Array.isArray(p === null || p === void 0 ? void 0 : p.colors) && p.colors.includes(filters.color));\n      }\n      if (filters.rating > 0) {\n        results = results.filter(p => {\n          var _p$rating;\n          return (p === null || p === void 0 ? void 0 : (_p$rating = p.rating) === null || _p$rating === void 0 ? void 0 : _p$rating.average) && p.rating.average >= filters.rating;\n        });\n      }\n      if (filters.inStock) {\n        results = results.filter(p => (p === null || p === void 0 ? void 0 : p.inStock) === true);\n      }\n      if (filters.onSale) {\n        results = results.filter(p => (p === null || p === void 0 ? void 0 : p.originalPrice) && (p === null || p === void 0 ? void 0 : p.price) && p.originalPrice > p.price);\n      }\n\n      // Price range filter with null checks\n      if (Array.isArray(filters.priceRange) && filters.priceRange.length === 2) {\n        results = results.filter(p => {\n          const price = parseFloat(p === null || p === void 0 ? void 0 : p.price);\n          return !isNaN(price) && price >= filters.priceRange[0] && price <= filters.priceRange[1];\n        });\n      }\n\n      // Apply sorting\n      results = sortResults(results, sortBy);\n      setSearchResults(results || []);\n\n      // Save search to recent searches\n      if (query && query.trim()) {\n        saveRecentSearch(query.trim());\n      }\n    } catch (error) {\n      console.error('Search error:', error);\n      setSearchResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const sortResults = (results, sortType) => {\n    if (!Array.isArray(results)) {\n      console.warn('sortResults received invalid results:', results);\n      return [];\n    }\n    const sortedResults = [...results];\n    try {\n      switch (sortType) {\n        case 'price_low':\n          return sortedResults.sort((a, b) => {\n            const priceA = parseFloat(a === null || a === void 0 ? void 0 : a.price) || 0;\n            const priceB = parseFloat(b === null || b === void 0 ? void 0 : b.price) || 0;\n            return priceA - priceB;\n          });\n        case 'price_high':\n          return sortedResults.sort((a, b) => {\n            const priceA = parseFloat(a === null || a === void 0 ? void 0 : a.price) || 0;\n            const priceB = parseFloat(b === null || b === void 0 ? void 0 : b.price) || 0;\n            return priceB - priceA;\n          });\n        case 'rating':\n          return sortedResults.sort((a, b) => {\n            var _a$rating, _b$rating;\n            const ratingA = (a === null || a === void 0 ? void 0 : (_a$rating = a.rating) === null || _a$rating === void 0 ? void 0 : _a$rating.average) || 0;\n            const ratingB = (b === null || b === void 0 ? void 0 : (_b$rating = b.rating) === null || _b$rating === void 0 ? void 0 : _b$rating.average) || 0;\n            return ratingB - ratingA;\n          });\n        case 'newest':\n          return sortedResults.sort((a, b) => {\n            const dateA = new Date((a === null || a === void 0 ? void 0 : a.createdAt) || 0);\n            const dateB = new Date((b === null || b === void 0 ? void 0 : b.createdAt) || 0);\n            return dateB - dateA;\n          });\n        case 'popular':\n          return sortedResults.sort((a, b) => {\n            var _a$rating2, _b$rating2;\n            const countA = (a === null || a === void 0 ? void 0 : (_a$rating2 = a.rating) === null || _a$rating2 === void 0 ? void 0 : _a$rating2.count) || 0;\n            const countB = (b === null || b === void 0 ? void 0 : (_b$rating2 = b.rating) === null || _b$rating2 === void 0 ? void 0 : _b$rating2.count) || 0;\n            return countB - countA;\n          });\n        case 'name_asc':\n          return sortedResults.sort((a, b) => {\n            const nameA = ((a === null || a === void 0 ? void 0 : a.name) || '').toLowerCase();\n            const nameB = ((b === null || b === void 0 ? void 0 : b.name) || '').toLowerCase();\n            return nameA.localeCompare(nameB);\n          });\n        case 'name_desc':\n          return sortedResults.sort((a, b) => {\n            const nameA = ((a === null || a === void 0 ? void 0 : a.name) || '').toLowerCase();\n            const nameB = ((b === null || b === void 0 ? void 0 : b.name) || '').toLowerCase();\n            return nameB.localeCompare(nameA);\n          });\n        default:\n          return sortedResults;\n        // relevance (default order)\n      }\n    } catch (sortError) {\n      console.error('Error sorting results:', sortError);\n      return results;\n    }\n  };\n  const saveRecentSearch = query => {\n    try {\n      if (!query || typeof query !== 'string' || query.trim().length === 0) {\n        return;\n      }\n      const trimmedQuery = query.trim();\n      const currentSearches = Array.isArray(recentSearches) ? recentSearches : [];\n      const updated = [trimmedQuery, ...currentSearches.filter(s => s !== trimmedQuery)].slice(0, 10);\n      setRecentSearches(updated);\n      localStorage.setItem('recentSearches', JSON.stringify(updated));\n    } catch (error) {\n      console.error('Error saving recent search:', error);\n    }\n  };\n  const clearRecentSearches = () => {\n    try {\n      setRecentSearches([]);\n      localStorage.removeItem('recentSearches');\n    } catch (error) {\n      console.error('Error clearing recent searches:', error);\n    }\n  };\n  const updateFilter = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n  const clearFilters = () => {\n    setFilters({\n      category: '',\n      priceRange: [0, 1000],\n      brand: '',\n      size: '',\n      color: '',\n      rating: 0,\n      inStock: false,\n      onSale: false\n    });\n  };\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSearchResults([]);\n    setSuggestions([]);\n    clearFilters();\n  };\n  const getActiveFiltersCount = () => {\n    let count = 0;\n    if (filters.category) count++;\n    if (filters.brand) count++;\n    if (filters.size) count++;\n    if (filters.color) count++;\n    if (filters.rating > 0) count++;\n    if (filters.inStock) count++;\n    if (filters.onSale) count++;\n    if (filters.priceRange[0] > 0 || filters.priceRange[1] < 1000) count++;\n    return count;\n  };\n  const value = {\n    // Search state\n    searchQuery,\n    setSearchQuery,\n    searchResults,\n    searchSuggestions,\n    recentSearches,\n    isSearching,\n    // Filters\n    filters,\n    updateFilter,\n    clearFilters,\n    showFilters,\n    setShowFilters,\n    filterOptions,\n    getActiveFiltersCount,\n    // Sorting\n    sortBy,\n    setSortBy,\n    sortOptions,\n    // Actions\n    performSearch,\n    clearSearch,\n    clearRecentSearches,\n    saveRecentSearch\n  };\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n};\n_s2(SearchProvider, \"ugdmbewEAiZYhdDWroZhDqO+Sbk=\");\n_c = SearchProvider;\nvar _c;\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","localProductService","jsxDEV","_jsxDEV","SearchContext","useSearch","_s","context","Error","SearchProvider","children","_s2","searchQuery","setSearchQuery","searchResults","setSearchResults","searchSuggestions","setSuggestions","recentSearches","setRecentSearches","isSearching","setIsSearching","filters","setFilters","category","priceRange","brand","size","color","rating","inStock","onSale","sortBy","setSortBy","showFilters","setShowFilters","filterOptions","setFilterOptions","categories","brands","sizes","colors","priceRanges","label","min","max","sortOptions","value","savedSearches","localStorage","getItem","JSON","parse","loadFilterOptions","products","getAllProducts","Set","map","p","filter","Boolean","flatMap","prev","error","console","loadInitialProducts","Array","isArray","log","debounceTimer","setTimeout","performSearch","clearTimeout","generateSuggestions","length","warn","suggestions","searchLower","toLowerCase","trim","forEach","product","name","includes","push","type","text","id","slice","query","results","searchTerms","split","term","description","tags","join","searchableText","every","filterError","_p$rating","average","originalPrice","price","parseFloat","isNaN","sortResults","saveRecentSearch","sortType","sortedResults","sort","a","b","priceA","priceB","_a$rating","_b$rating","ratingA","ratingB","dateA","Date","createdAt","dateB","_a$rating2","_b$rating2","countA","count","countB","nameA","nameB","localeCompare","sortError","trimmedQuery","currentSearches","updated","s","setItem","stringify","clearRecentSearches","removeItem","updateFilter","filterType","clearFilters","clearSearch","getActiveFiltersCount","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/src/context/SearchContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport localProductService from '../services/localProductService';\r\n\r\nconst SearchContext = createContext();\r\n\r\nexport const useSearch = () => {\r\n  const context = useContext(SearchContext);\r\n  if (!context) {\r\n    throw new Error('useSearch must be used within a SearchProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SearchProvider = ({ children }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchSuggestions, setSuggestions] = useState([]);\r\n  const [recentSearches, setRecentSearches] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    category: '',\r\n    priceRange: [0, 1000],\r\n    brand: '',\r\n    size: '',\r\n    color: '',\r\n    rating: 0,\r\n    inStock: false,\r\n    onSale: false\r\n  });\r\n  const [sortBy, setSortBy] = useState('relevance');\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  // Available filter options\r\n  const [filterOptions, setFilterOptions] = useState({\r\n    categories: [],\r\n    brands: [],\r\n    sizes: [],\r\n    colors: [],\r\n    priceRanges: [\r\n      { label: 'Under $25', min: 0, max: 25 },\r\n      { label: '$25 - $50', min: 25, max: 50 },\r\n      { label: '$50 - $100', min: 50, max: 100 },\r\n      { label: '$100 - $200', min: 100, max: 200 },\r\n      { label: 'Over $200', min: 200, max: 1000 }\r\n    ]\r\n  });\r\n\r\n  // Sort options\r\n  const sortOptions = [\r\n    { value: 'relevance', label: 'Best Match' },\r\n    { value: 'price_low', label: 'Price: Low to High' },\r\n    { value: 'price_high', label: 'Price: High to Low' },\r\n    { value: 'rating', label: 'Customer Rating' },\r\n    { value: 'newest', label: 'Newest First' },\r\n    { value: 'popular', label: 'Most Popular' },\r\n    { value: 'name_asc', label: 'Name: A to Z' },\r\n    { value: 'name_desc', label: 'Name: Z to A' }\r\n  ];\r\n\r\n  // Load recent searches from localStorage\r\n  useEffect(() => {\r\n    const savedSearches = localStorage.getItem('recentSearches');\r\n    if (savedSearches) {\r\n      setRecentSearches(JSON.parse(savedSearches));\r\n    }\r\n  }, []);\r\n\r\n  // Load filter options from products\r\n  useEffect(() => {\r\n    const loadFilterOptions = async () => {\r\n      try {\r\n        const products = await localProductService.getAllProducts();\r\n        \r\n        const categories = [...new Set(products.map(p => p.category))];\r\n        const brands = [...new Set(products.map(p => p.brand).filter(Boolean))];\r\n        const sizes = [...new Set(products.flatMap(p => p.sizes || []))];\r\n        const colors = [...new Set(products.flatMap(p => p.colors || []))];\r\n\r\n        setFilterOptions(prev => ({\r\n          ...prev,\r\n          categories,\r\n          brands,\r\n          sizes,\r\n          colors\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error loading filter options:', error);\r\n      }\r\n    };\r\n\r\n    loadFilterOptions();\r\n    \r\n    // Load all products initially\r\n    const loadInitialProducts = async () => {\r\n      try {\r\n        const products = await localProductService.getAllProducts();\r\n        if (Array.isArray(products)) {\r\n          setSearchResults(products);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading initial products:', error);\r\n        setSearchResults([]);\r\n      }\r\n    };\r\n    \r\n    loadInitialProducts();\r\n  }, []);\r\n\r\n  // Perform search with debouncing\r\n  useEffect(() => {\r\n    console.log('SearchContext: searchQuery changed to:', searchQuery); // Debug log\r\n    const debounceTimer = setTimeout(() => {\r\n      console.log('SearchContext: Performing search for:', searchQuery || 'empty query'); // Debug log\r\n      performSearch(searchQuery || '');\r\n    }, 300);\r\n\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [searchQuery, filters, sortBy]);\r\n\r\n  // Generate search suggestions\r\n  useEffect(() => {\r\n    const generateSuggestions = async () => {\r\n      if (!searchQuery || searchQuery.length < 2) {\r\n        setSuggestions([]);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const products = await localProductService.getAllProducts();\r\n        \r\n        if (!Array.isArray(products)) {\r\n          console.warn('generateSuggestions: products is not an array:', products);\r\n          setSuggestions([]);\r\n          return;\r\n        }\r\n\r\n        const suggestions = [];\r\n        const searchLower = searchQuery.toLowerCase().trim();\r\n\r\n        // Product name suggestions with null checks\r\n        products.forEach(product => {\r\n          try {\r\n            if (product?.name && typeof product.name === 'string') {\r\n              if (product.name.toLowerCase().includes(searchLower)) {\r\n                suggestions.push({\r\n                  type: 'product',\r\n                  text: product.name,\r\n                  category: product.category || 'uncategorized',\r\n                  id: product.id\r\n                });\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.warn('Error processing product suggestion:', product, error);\r\n          }\r\n        });\r\n\r\n        // Category suggestions with null checks\r\n        if (Array.isArray(filterOptions.categories)) {\r\n          filterOptions.categories.forEach(category => {\r\n            try {\r\n              if (category && typeof category === 'string') {\r\n                if (category.toLowerCase().includes(searchLower)) {\r\n                  suggestions.push({\r\n                    type: 'category',\r\n                    text: category,\r\n                    category: category\r\n                  });\r\n                }\r\n              }\r\n            } catch (error) {\r\n              console.warn('Error processing category suggestion:', category, error);\r\n            }\r\n          });\r\n        }\r\n\r\n        // Brand suggestions with null checks\r\n        if (Array.isArray(filterOptions.brands)) {\r\n          filterOptions.brands.forEach(brand => {\r\n            try {\r\n              if (brand && typeof brand === 'string') {\r\n                if (brand.toLowerCase().includes(searchLower)) {\r\n                  suggestions.push({\r\n                    type: 'brand',\r\n                    text: brand,\r\n                    category: 'brand'\r\n                  });\r\n                }\r\n              }\r\n            } catch (error) {\r\n              console.warn('Error processing brand suggestion:', brand, error);\r\n            }\r\n          });\r\n        }\r\n\r\n        setSuggestions(suggestions.slice(0, 8));\r\n      } catch (error) {\r\n        console.error('Error generating suggestions:', error);\r\n        setSuggestions([]);\r\n      }\r\n    };\r\n\r\n    const debounceTimer = setTimeout(generateSuggestions, 200);\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [searchQuery, filterOptions]);\r\n\r\n  const performSearch = async (query) => {\r\n    setIsSearching(true);\r\n    \r\n    try {\r\n      const products = await localProductService.getAllProducts();\r\n      \r\n      // Validate products array\r\n      if (!Array.isArray(products)) {\r\n        console.warn('Products is not an array:', products);\r\n        setSearchResults([]);\r\n        return;\r\n      }\r\n\r\n      let results = [...products]; // Create a copy to avoid mutations\r\n\r\n      // Text search with better error handling\r\n      if (query && query.trim()) {\r\n        const searchTerms = query.toLowerCase().split(' ').filter(term => term.length > 0);\r\n        \r\n        results = results.filter(product => {\r\n          try {\r\n            // Safely build searchable text with null checks\r\n            const name = product?.name || '';\r\n            const description = product?.description || '';\r\n            const category = product?.category || '';\r\n            const brand = product?.brand || '';\r\n            const tags = Array.isArray(product?.tags) ? product.tags.join(' ') : '';\r\n            \r\n            const searchableText = `${name} ${description} ${category} ${brand} ${tags}`.toLowerCase();\r\n            return searchTerms.every(term => searchableText.includes(term));\r\n          } catch (filterError) {\r\n            console.warn('Error filtering product:', product, filterError);\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Apply filters with null checks\r\n      if (filters.category) {\r\n        results = results.filter(p => p?.category === filters.category);\r\n      }\r\n\r\n      if (filters.brand) {\r\n        results = results.filter(p => p?.brand === filters.brand);\r\n      }\r\n\r\n      if (filters.size) {\r\n        results = results.filter(p => Array.isArray(p?.sizes) && p.sizes.includes(filters.size));\r\n      }\r\n\r\n      if (filters.color) {\r\n        results = results.filter(p => Array.isArray(p?.colors) && p.colors.includes(filters.color));\r\n      }\r\n\r\n      if (filters.rating > 0) {\r\n        results = results.filter(p => p?.rating?.average && p.rating.average >= filters.rating);\r\n      }\r\n\r\n      if (filters.inStock) {\r\n        results = results.filter(p => p?.inStock === true);\r\n      }\r\n\r\n      if (filters.onSale) {\r\n        results = results.filter(p => p?.originalPrice && p?.price && p.originalPrice > p.price);\r\n      }\r\n\r\n      // Price range filter with null checks\r\n      if (Array.isArray(filters.priceRange) && filters.priceRange.length === 2) {\r\n        results = results.filter(p => {\r\n          const price = parseFloat(p?.price);\r\n          return !isNaN(price) && \r\n                 price >= filters.priceRange[0] && \r\n                 price <= filters.priceRange[1];\r\n        });\r\n      }\r\n\r\n      // Apply sorting\r\n      results = sortResults(results, sortBy);\r\n\r\n      setSearchResults(results || []);\r\n\r\n      // Save search to recent searches\r\n      if (query && query.trim()) {\r\n        saveRecentSearch(query.trim());\r\n      }\r\n    } catch (error) {\r\n      console.error('Search error:', error);\r\n      setSearchResults([]);\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  const sortResults = (results, sortType) => {\r\n    if (!Array.isArray(results)) {\r\n      console.warn('sortResults received invalid results:', results);\r\n      return [];\r\n    }\r\n\r\n    const sortedResults = [...results];\r\n\r\n    try {\r\n      switch (sortType) {\r\n        case 'price_low':\r\n          return sortedResults.sort((a, b) => {\r\n            const priceA = parseFloat(a?.price) || 0;\r\n            const priceB = parseFloat(b?.price) || 0;\r\n            return priceA - priceB;\r\n          });\r\n        case 'price_high':\r\n          return sortedResults.sort((a, b) => {\r\n            const priceA = parseFloat(a?.price) || 0;\r\n            const priceB = parseFloat(b?.price) || 0;\r\n            return priceB - priceA;\r\n          });\r\n        case 'rating':\r\n          return sortedResults.sort((a, b) => {\r\n            const ratingA = a?.rating?.average || 0;\r\n            const ratingB = b?.rating?.average || 0;\r\n            return ratingB - ratingA;\r\n          });\r\n        case 'newest':\r\n          return sortedResults.sort((a, b) => {\r\n            const dateA = new Date(a?.createdAt || 0);\r\n            const dateB = new Date(b?.createdAt || 0);\r\n            return dateB - dateA;\r\n          });\r\n        case 'popular':\r\n          return sortedResults.sort((a, b) => {\r\n            const countA = a?.rating?.count || 0;\r\n            const countB = b?.rating?.count || 0;\r\n            return countB - countA;\r\n          });\r\n        case 'name_asc':\r\n          return sortedResults.sort((a, b) => {\r\n            const nameA = (a?.name || '').toLowerCase();\r\n            const nameB = (b?.name || '').toLowerCase();\r\n            return nameA.localeCompare(nameB);\r\n          });\r\n        case 'name_desc':\r\n          return sortedResults.sort((a, b) => {\r\n            const nameA = (a?.name || '').toLowerCase();\r\n            const nameB = (b?.name || '').toLowerCase();\r\n            return nameB.localeCompare(nameA);\r\n          });\r\n        default:\r\n          return sortedResults; // relevance (default order)\r\n      }\r\n    } catch (sortError) {\r\n      console.error('Error sorting results:', sortError);\r\n      return results;\r\n    }\r\n  };\r\n\r\n  const saveRecentSearch = (query) => {\r\n    try {\r\n      if (!query || typeof query !== 'string' || query.trim().length === 0) {\r\n        return;\r\n      }\r\n      \r\n      const trimmedQuery = query.trim();\r\n      const currentSearches = Array.isArray(recentSearches) ? recentSearches : [];\r\n      const updated = [trimmedQuery, ...currentSearches.filter(s => s !== trimmedQuery)].slice(0, 10);\r\n      \r\n      setRecentSearches(updated);\r\n      localStorage.setItem('recentSearches', JSON.stringify(updated));\r\n    } catch (error) {\r\n      console.error('Error saving recent search:', error);\r\n    }\r\n  };\r\n\r\n  const clearRecentSearches = () => {\r\n    try {\r\n      setRecentSearches([]);\r\n      localStorage.removeItem('recentSearches');\r\n    } catch (error) {\r\n      console.error('Error clearing recent searches:', error);\r\n    }\r\n  };\r\n\r\n  const updateFilter = (filterType, value) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [filterType]: value\r\n    }));\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setFilters({\r\n      category: '',\r\n      priceRange: [0, 1000],\r\n      brand: '',\r\n      size: '',\r\n      color: '',\r\n      rating: 0,\r\n      inStock: false,\r\n      onSale: false\r\n    });\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setSearchQuery('');\r\n    setSearchResults([]);\r\n    setSuggestions([]);\r\n    clearFilters();\r\n  };\r\n\r\n  const getActiveFiltersCount = () => {\r\n    let count = 0;\r\n    if (filters.category) count++;\r\n    if (filters.brand) count++;\r\n    if (filters.size) count++;\r\n    if (filters.color) count++;\r\n    if (filters.rating > 0) count++;\r\n    if (filters.inStock) count++;\r\n    if (filters.onSale) count++;\r\n    if (filters.priceRange[0] > 0 || filters.priceRange[1] < 1000) count++;\r\n    return count;\r\n  };\r\n\r\n  const value = {\r\n    // Search state\r\n    searchQuery,\r\n    setSearchQuery,\r\n    searchResults,\r\n    searchSuggestions,\r\n    recentSearches,\r\n    isSearching,\r\n    \r\n    // Filters\r\n    filters,\r\n    updateFilter,\r\n    clearFilters,\r\n    showFilters,\r\n    setShowFilters,\r\n    filterOptions,\r\n    getActiveFiltersCount,\r\n    \r\n    // Sorting\r\n    sortBy,\r\n    setSortBy,\r\n    sortOptions,\r\n    \r\n    // Actions\r\n    performSearch,\r\n    clearSearch,\r\n    clearRecentSearches,\r\n    saveRecentSearch\r\n  };\r\n\r\n  return (\r\n    <SearchContext.Provider value={value}>\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
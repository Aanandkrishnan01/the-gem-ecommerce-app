{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is logged in on app load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // In a real app, you would verify the token with your backend\n      // For now, we'll just set loading to false\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    } else {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  }, []);\n  const login = async (email, password) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      // Mock API call - replace with actual API call\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n\n      // Store token in localStorage\n      localStorage.setItem('token', data.token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: data.user,\n          token: data.token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      // Mock API call - replace with actual API call\n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed');\n      }\n      const data = await response.json();\n\n      // Store token in localStorage\n      localStorage.setItem('token', data.token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: data.user,\n          token: data.token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    user: state.user,\n    token: state.token,\n    isAuthenticated: state.isAuthenticated,\n    loading: state.loading,\n    error: state.error,\n    login,\n    register,\n    logout,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","user","payload","token","isAuthenticated","loading","error","initialState","localStorage","getItem","AuthProvider","children","_s","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","setItem","success","message","register","userData","logout","removeItem","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is logged in on app load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // In a real app, you would verify the token with your backend\r\n      // For now, we'll just set loading to false\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    } else {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    \r\n    try {\r\n      // Mock API call - replace with actual API call\r\n      const response = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('token', data.token);\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: {\r\n          user: data.user,\r\n          token: data.token\r\n        }\r\n      });\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: error.message\r\n      });\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    \r\n    try {\r\n      // Mock API call - replace with actual API call\r\n      const response = await fetch('/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Registration failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('token', data.token);\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: {\r\n          user: data.user,\r\n          token: data.token\r\n        }\r\n      });\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: error.message\r\n      });\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value = {\r\n    user: state.user,\r\n    token: state.token,\r\n    isAuthenticated: state.isAuthenticated,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
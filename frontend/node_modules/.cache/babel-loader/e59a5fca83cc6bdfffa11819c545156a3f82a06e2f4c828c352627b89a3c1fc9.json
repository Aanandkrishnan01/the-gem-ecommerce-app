{"ast":null,"code":"import _objectSpread from\"C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const MarketingContext=/*#__PURE__*/createContext();const marketingReducer=(state,action)=>{switch(action.type){case'LOAD_MARKETING_DATA':return _objectSpread(_objectSpread(_objectSpread({},state),action.payload),{},{loading:false});case'SUBSCRIBE_NEWSLETTER':const subscription={email:action.payload.email,preferences:action.payload.preferences,subscribedAt:new Date().toISOString(),status:'active',id:Date.now().toString()};const updatedSubscriptions=[...state.subscriptions,subscription];localStorage.setItem('newsletter_subscriptions',JSON.stringify(updatedSubscriptions));return _objectSpread(_objectSpread({},state),{},{subscriptions:updatedSubscriptions,userSubscription:subscription});case'UNSUBSCRIBE_NEWSLETTER':const filteredSubscriptions=state.subscriptions.filter(sub=>sub.id!==action.payload);localStorage.setItem('newsletter_subscriptions',JSON.stringify(filteredSubscriptions));return _objectSpread(_objectSpread({},state),{},{subscriptions:filteredSubscriptions,userSubscription:null});case'UPDATE_PREFERENCES':const updatedSubs=state.subscriptions.map(sub=>sub.id===action.payload.id?_objectSpread(_objectSpread({},sub),{},{preferences:action.payload.preferences,updatedAt:new Date().toISOString()}):sub);localStorage.setItem('newsletter_subscriptions',JSON.stringify(updatedSubs));const updatedUserSub=updatedSubs.find(sub=>sub.id===action.payload.id);return _objectSpread(_objectSpread({},state),{},{subscriptions:updatedSubs,userSubscription:updatedUserSub||state.userSubscription});case'DISMISS_BANNER':const dismissedBanners=[...state.dismissedBanners,action.payload];localStorage.setItem('dismissed_banners',JSON.stringify(dismissedBanners));return _objectSpread(_objectSpread({},state),{},{dismissedBanners});case'ADD_CAMPAIGN':const campaigns=[...state.campaigns,action.payload];localStorage.setItem('marketing_campaigns',JSON.stringify(campaigns));return _objectSpread(_objectSpread({},state),{},{campaigns});case'TRACK_INTERACTION':const interactions=[...state.interactions,_objectSpread(_objectSpread({},action.payload),{},{timestamp:new Date().toISOString(),id:Date.now().toString()})];// Keep only last 100 interactions to prevent localStorage bloat\nconst recentInteractions=interactions.slice(-100);localStorage.setItem('marketing_interactions',JSON.stringify(recentInteractions));return _objectSpread(_objectSpread({},state),{},{interactions:recentInteractions});default:return state;}};const initialState={subscriptions:[],userSubscription:null,dismissedBanners:[],campaigns:[],interactions:[],preferences:{categories:['new-arrivals','sales','seasonal'],frequency:'weekly',// daily, weekly, monthly\nformat:'html'// html, text\n},loading:true};export const MarketingProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(marketingReducer,initialState);// Load marketing data from localStorage on app start\nuseEffect(()=>{try{const subscriptions=JSON.parse(localStorage.getItem('newsletter_subscriptions')||'[]');const dismissedBanners=JSON.parse(localStorage.getItem('dismissed_banners')||'[]');const campaigns=JSON.parse(localStorage.getItem('marketing_campaigns')||'[]');const interactions=JSON.parse(localStorage.getItem('marketing_interactions')||'[]');// Find user's current subscription\nconst userSubscription=subscriptions.find(sub=>sub.status==='active')||null;dispatch({type:'LOAD_MARKETING_DATA',payload:{subscriptions,userSubscription,dismissedBanners,campaigns,interactions}});}catch(error){console.error('Error loading marketing data:',error);dispatch({type:'LOAD_MARKETING_DATA',payload:{}});}},[]);const subscribeNewsletter=function(email){let preferences=arguments.length>1&&arguments[1]!==undefined?arguments[1]:state.preferences;if(!email||typeof email!=='string'||!email.includes('@')){throw new Error('Valid email address is required');}// Check if already subscribed\nconst existingSubscription=state.subscriptions.find(sub=>sub.email===email&&sub.status==='active');if(existingSubscription){throw new Error('Email is already subscribed');}dispatch({type:'SUBSCRIBE_NEWSLETTER',payload:{email,preferences}});// Track subscription interaction\ntrackInteraction('newsletter_subscribe',{email,preferences});return true;};const unsubscribeNewsletter=subscriptionId=>{if(!subscriptionId){throw new Error('Subscription ID is required');}dispatch({type:'UNSUBSCRIBE_NEWSLETTER',payload:subscriptionId});trackInteraction('newsletter_unsubscribe',{subscriptionId});};const updatePreferences=(subscriptionId,preferences)=>{if(!subscriptionId||!preferences){throw new Error('Subscription ID and preferences are required');}dispatch({type:'UPDATE_PREFERENCES',payload:{id:subscriptionId,preferences}});trackInteraction('preferences_update',{subscriptionId,preferences});};const dismissBanner=bannerId=>{if(!bannerId){return;}dispatch({type:'DISMISS_BANNER',payload:bannerId});trackInteraction('banner_dismiss',{bannerId});};const trackInteraction=function(type){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};dispatch({type:'TRACK_INTERACTION',payload:{type,data}});};const isBannerDismissed=bannerId=>{return state.dismissedBanners.includes(bannerId);};const isSubscribed=function(){let email=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(email){return state.subscriptions.some(sub=>sub.email===email&&sub.status==='active');}return!!state.userSubscription;};const getActiveSubscription=()=>{return state.userSubscription;};const getSubscriptionStats=()=>{const total=state.subscriptions.length;const active=state.subscriptions.filter(sub=>sub.status==='active').length;const recent=state.subscriptions.filter(sub=>{const subDate=new Date(sub.subscribedAt);const weekAgo=new Date(Date.now()-7*24*60*60*1000);return subDate>weekAgo;}).length;return{total,active,recent};};const getPopularPreferences=()=>{const preferenceCount={};state.subscriptions.forEach(sub=>{if(sub.preferences&&sub.preferences.categories){sub.preferences.categories.forEach(category=>{preferenceCount[category]=(preferenceCount[category]||0)+1;});}});return Object.entries(preferenceCount).sort((_ref2,_ref3)=>{let[,a]=_ref2;let[,b]=_ref3;return b-a;}).slice(0,5).map(_ref4=>{let[category,count]=_ref4;return{category,count};});};const value={// State\nsubscriptions:state.subscriptions,userSubscription:state.userSubscription,dismissedBanners:state.dismissedBanners,campaigns:state.campaigns,interactions:state.interactions,preferences:state.preferences,loading:state.loading,// Actions\nsubscribeNewsletter,unsubscribeNewsletter,updatePreferences,dismissBanner,trackInteraction,// Utilities\nisBannerDismissed,isSubscribed,getActiveSubscription,getSubscriptionStats,getPopularPreferences};return/*#__PURE__*/_jsx(MarketingContext.Provider,{value:value,children:children});};export const useMarketing=()=>{const context=useContext(MarketingContext);if(context===undefined){throw new Error('useMarketing must be used within a MarketingProvider');}return context;};export default MarketingContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsx","_jsx","MarketingContext","marketingReducer","state","action","type","_objectSpread","payload","loading","subscription","email","preferences","subscribedAt","Date","toISOString","status","id","now","toString","updatedSubscriptions","subscriptions","localStorage","setItem","JSON","stringify","userSubscription","filteredSubscriptions","filter","sub","updatedSubs","map","updatedAt","updatedUserSub","find","dismissedBanners","campaigns","interactions","timestamp","recentInteractions","slice","initialState","categories","frequency","format","MarketingProvider","_ref","children","dispatch","parse","getItem","error","console","subscribeNewsletter","arguments","length","undefined","includes","Error","existingSubscription","trackInteraction","unsubscribeNewsletter","subscriptionId","updatePreferences","dismissBanner","bannerId","data","isBannerDismissed","isSubscribed","some","getActiveSubscription","getSubscriptionStats","total","active","recent","subDate","weekAgo","getPopularPreferences","preferenceCount","forEach","category","Object","entries","sort","_ref2","_ref3","a","b","_ref4","count","value","Provider","useMarketing","context"],"sources":["C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/src/context/MarketingContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst MarketingContext = createContext();\r\n\r\nconst marketingReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOAD_MARKETING_DATA':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case 'SUBSCRIBE_NEWSLETTER':\r\n      const subscription = {\r\n        email: action.payload.email,\r\n        preferences: action.payload.preferences,\r\n        subscribedAt: new Date().toISOString(),\r\n        status: 'active',\r\n        id: Date.now().toString()\r\n      };\r\n      \r\n      const updatedSubscriptions = [...state.subscriptions, subscription];\r\n      localStorage.setItem('newsletter_subscriptions', JSON.stringify(updatedSubscriptions));\r\n      \r\n      return {\r\n        ...state,\r\n        subscriptions: updatedSubscriptions,\r\n        userSubscription: subscription\r\n      };\r\n\r\n    case 'UNSUBSCRIBE_NEWSLETTER':\r\n      const filteredSubscriptions = state.subscriptions.filter(sub => sub.id !== action.payload);\r\n      localStorage.setItem('newsletter_subscriptions', JSON.stringify(filteredSubscriptions));\r\n      \r\n      return {\r\n        ...state,\r\n        subscriptions: filteredSubscriptions,\r\n        userSubscription: null\r\n      };\r\n\r\n    case 'UPDATE_PREFERENCES':\r\n      const updatedSubs = state.subscriptions.map(sub => \r\n        sub.id === action.payload.id \r\n          ? { ...sub, preferences: action.payload.preferences, updatedAt: new Date().toISOString() }\r\n          : sub\r\n      );\r\n      localStorage.setItem('newsletter_subscriptions', JSON.stringify(updatedSubs));\r\n      \r\n      const updatedUserSub = updatedSubs.find(sub => sub.id === action.payload.id);\r\n      \r\n      return {\r\n        ...state,\r\n        subscriptions: updatedSubs,\r\n        userSubscription: updatedUserSub || state.userSubscription\r\n      };\r\n\r\n    case 'DISMISS_BANNER':\r\n      const dismissedBanners = [...state.dismissedBanners, action.payload];\r\n      localStorage.setItem('dismissed_banners', JSON.stringify(dismissedBanners));\r\n      \r\n      return {\r\n        ...state,\r\n        dismissedBanners\r\n      };\r\n\r\n    case 'ADD_CAMPAIGN':\r\n      const campaigns = [...state.campaigns, action.payload];\r\n      localStorage.setItem('marketing_campaigns', JSON.stringify(campaigns));\r\n      \r\n      return {\r\n        ...state,\r\n        campaigns\r\n      };\r\n\r\n    case 'TRACK_INTERACTION':\r\n      const interactions = [...state.interactions, {\r\n        ...action.payload,\r\n        timestamp: new Date().toISOString(),\r\n        id: Date.now().toString()\r\n      }];\r\n      \r\n      // Keep only last 100 interactions to prevent localStorage bloat\r\n      const recentInteractions = interactions.slice(-100);\r\n      localStorage.setItem('marketing_interactions', JSON.stringify(recentInteractions));\r\n      \r\n      return {\r\n        ...state,\r\n        interactions: recentInteractions\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  subscriptions: [],\r\n  userSubscription: null,\r\n  dismissedBanners: [],\r\n  campaigns: [],\r\n  interactions: [],\r\n  preferences: {\r\n    categories: ['new-arrivals', 'sales', 'seasonal'],\r\n    frequency: 'weekly', // daily, weekly, monthly\r\n    format: 'html' // html, text\r\n  },\r\n  loading: true\r\n};\r\n\r\nexport const MarketingProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(marketingReducer, initialState);\r\n\r\n  // Load marketing data from localStorage on app start\r\n  useEffect(() => {\r\n    try {\r\n      const subscriptions = JSON.parse(localStorage.getItem('newsletter_subscriptions') || '[]');\r\n      const dismissedBanners = JSON.parse(localStorage.getItem('dismissed_banners') || '[]');\r\n      const campaigns = JSON.parse(localStorage.getItem('marketing_campaigns') || '[]');\r\n      const interactions = JSON.parse(localStorage.getItem('marketing_interactions') || '[]');\r\n      \r\n      // Find user's current subscription\r\n      const userSubscription = subscriptions.find(sub => sub.status === 'active') || null;\r\n      \r\n      dispatch({\r\n        type: 'LOAD_MARKETING_DATA',\r\n        payload: {\r\n          subscriptions,\r\n          userSubscription,\r\n          dismissedBanners,\r\n          campaigns,\r\n          interactions\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error loading marketing data:', error);\r\n      dispatch({ type: 'LOAD_MARKETING_DATA', payload: {} });\r\n    }\r\n  }, []);\r\n\r\n  const subscribeNewsletter = (email, preferences = state.preferences) => {\r\n    if (!email || typeof email !== 'string' || !email.includes('@')) {\r\n      throw new Error('Valid email address is required');\r\n    }\r\n\r\n    // Check if already subscribed\r\n    const existingSubscription = state.subscriptions.find(\r\n      sub => sub.email === email && sub.status === 'active'\r\n    );\r\n    \r\n    if (existingSubscription) {\r\n      throw new Error('Email is already subscribed');\r\n    }\r\n\r\n    dispatch({\r\n      type: 'SUBSCRIBE_NEWSLETTER',\r\n      payload: { email, preferences }\r\n    });\r\n\r\n    // Track subscription interaction\r\n    trackInteraction('newsletter_subscribe', { email, preferences });\r\n    \r\n    return true;\r\n  };\r\n\r\n  const unsubscribeNewsletter = (subscriptionId) => {\r\n    if (!subscriptionId) {\r\n      throw new Error('Subscription ID is required');\r\n    }\r\n\r\n    dispatch({ type: 'UNSUBSCRIBE_NEWSLETTER', payload: subscriptionId });\r\n    trackInteraction('newsletter_unsubscribe', { subscriptionId });\r\n  };\r\n\r\n  const updatePreferences = (subscriptionId, preferences) => {\r\n    if (!subscriptionId || !preferences) {\r\n      throw new Error('Subscription ID and preferences are required');\r\n    }\r\n\r\n    dispatch({\r\n      type: 'UPDATE_PREFERENCES',\r\n      payload: { id: subscriptionId, preferences }\r\n    });\r\n\r\n    trackInteraction('preferences_update', { subscriptionId, preferences });\r\n  };\r\n\r\n  const dismissBanner = (bannerId) => {\r\n    if (!bannerId) {\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: 'DISMISS_BANNER', payload: bannerId });\r\n    trackInteraction('banner_dismiss', { bannerId });\r\n  };\r\n\r\n  const trackInteraction = (type, data = {}) => {\r\n    dispatch({\r\n      type: 'TRACK_INTERACTION',\r\n      payload: { type, data }\r\n    });\r\n  };\r\n\r\n  const isBannerDismissed = (bannerId) => {\r\n    return state.dismissedBanners.includes(bannerId);\r\n  };\r\n\r\n  const isSubscribed = (email = null) => {\r\n    if (email) {\r\n      return state.subscriptions.some(sub => sub.email === email && sub.status === 'active');\r\n    }\r\n    return !!state.userSubscription;\r\n  };\r\n\r\n  const getActiveSubscription = () => {\r\n    return state.userSubscription;\r\n  };\r\n\r\n  const getSubscriptionStats = () => {\r\n    const total = state.subscriptions.length;\r\n    const active = state.subscriptions.filter(sub => sub.status === 'active').length;\r\n    const recent = state.subscriptions.filter(sub => {\r\n      const subDate = new Date(sub.subscribedAt);\r\n      const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\r\n      return subDate > weekAgo;\r\n    }).length;\r\n\r\n    return { total, active, recent };\r\n  };\r\n\r\n  const getPopularPreferences = () => {\r\n    const preferenceCount = {};\r\n    \r\n    state.subscriptions.forEach(sub => {\r\n      if (sub.preferences && sub.preferences.categories) {\r\n        sub.preferences.categories.forEach(category => {\r\n          preferenceCount[category] = (preferenceCount[category] || 0) + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    return Object.entries(preferenceCount)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 5)\r\n      .map(([category, count]) => ({ category, count }));\r\n  };\r\n\r\n  const value = {\r\n    // State\r\n    subscriptions: state.subscriptions,\r\n    userSubscription: state.userSubscription,\r\n    dismissedBanners: state.dismissedBanners,\r\n    campaigns: state.campaigns,\r\n    interactions: state.interactions,\r\n    preferences: state.preferences,\r\n    loading: state.loading,\r\n\r\n    // Actions\r\n    subscribeNewsletter,\r\n    unsubscribeNewsletter,\r\n    updatePreferences,\r\n    dismissBanner,\r\n    trackInteraction,\r\n\r\n    // Utilities\r\n    isBannerDismissed,\r\n    isSubscribed,\r\n    getActiveSubscription,\r\n    getSubscriptionStats,\r\n    getPopularPreferences\r\n  };\r\n\r\n  return (\r\n    <MarketingContext.Provider value={value}>\r\n      {children}\r\n    </MarketingContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMarketing = () => {\r\n  const context = useContext(MarketingContext);\r\n  if (context === undefined) {\r\n    throw new Error('useMarketing must be used within a MarketingProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default MarketingContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
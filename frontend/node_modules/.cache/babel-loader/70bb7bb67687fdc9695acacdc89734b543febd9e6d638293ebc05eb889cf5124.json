{"ast":null,"code":"import _objectSpread from\"C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AdminContext=/*#__PURE__*/createContext();const adminReducer=(state,action)=>{switch(action.type){case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case'SET_STATS':return _objectSpread(_objectSpread({},state),{},{stats:action.payload});case'SET_RECENT_ORDERS':return _objectSpread(_objectSpread({},state),{},{recentOrders:action.payload});case'SET_USERS':return _objectSpread(_objectSpread({},state),{},{users:action.payload});case'UPDATE_USER':return _objectSpread(_objectSpread({},state),{},{users:state.users.map(user=>user.id===action.payload.id?action.payload:user)});case'DELETE_USER':return _objectSpread(_objectSpread({},state),{},{users:state.users.filter(user=>user.id!==action.payload)});default:return state;}};const initialState={loading:true,stats:{totalOrders:0,totalRevenue:0,totalUsers:0,totalProducts:0,pendingOrders:0,monthlyGrowth:0},recentOrders:[],users:[]};export const AdminProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(adminReducer,initialState);// Load admin data on mount\nuseEffect(()=>{loadAdminData();},[]);const loadAdminData=async()=>{dispatch({type:'SET_LOADING',payload:true});try{// Simulate loading admin data\nsetTimeout(()=>{const mockStats={totalOrders:1247,totalRevenue:89250.75,totalUsers:3892,totalProducts:156,pendingOrders:23,monthlyGrowth:12.5};const mockRecentOrders=[{id:'ORD-001',customer:'John Doe',email:'john@example.com',total:129.99,status:'pending',date:new Date().toISOString(),items:2},{id:'ORD-002',customer:'Sarah Wilson',email:'sarah@example.com',total:89.50,status:'processing',date:new Date(Date.now()-3600000).toISOString(),items:1},{id:'ORD-003',customer:'Mike Johnson',email:'mike@example.com',total:299.99,status:'shipped',date:new Date(Date.now()-7200000).toISOString(),items:3}];const mockUsers=[{id:'1',firstName:'John',lastName:'Doe',email:'john@example.com',role:'customer',status:'active',joinDate:'2024-01-15',lastLogin:'2024-03-20',orders:5,totalSpent:450.00},{id:'2',firstName:'Sarah',lastName:'Wilson',email:'sarah@example.com',role:'customer',status:'active',joinDate:'2024-02-10',lastLogin:'2024-03-21',orders:3,totalSpent:299.50},{id:'3',firstName:'Admin',lastName:'User',email:'admin@example.com',role:'admin',status:'active',joinDate:'2023-12-01',lastLogin:'2024-03-22',orders:0,totalSpent:0}];dispatch({type:'SET_STATS',payload:mockStats});dispatch({type:'SET_RECENT_ORDERS',payload:mockRecentOrders});dispatch({type:'SET_USERS',payload:mockUsers});dispatch({type:'SET_LOADING',payload:false});},1000);}catch(error){console.error('Error loading admin data:',error);dispatch({type:'SET_LOADING',payload:false});}};const updateOrderStatus=(orderId,status)=>{// In a real app, make API call to update order status\nconst updatedOrders=state.recentOrders.map(order=>order.id===orderId?_objectSpread(_objectSpread({},order),{},{status}):order);dispatch({type:'SET_RECENT_ORDERS',payload:updatedOrders});};const updateUserRole=(userId,role)=>{const user=state.users.find(u=>u.id===userId);if(user){dispatch({type:'UPDATE_USER',payload:_objectSpread(_objectSpread({},user),{},{role})});}};const updateUserStatus=(userId,status)=>{const user=state.users.find(u=>u.id===userId);if(user){dispatch({type:'UPDATE_USER',payload:_objectSpread(_objectSpread({},user),{},{status})});}};const deleteUser=userId=>{dispatch({type:'DELETE_USER',payload:userId});};const isAdmin=user=>{return user&&user.email==='admin@example.com';};const value=_objectSpread(_objectSpread({},state),{},{updateOrderStatus,updateUserRole,updateUserStatus,deleteUser,isAdmin,refreshData:loadAdminData});return/*#__PURE__*/_jsx(AdminContext.Provider,{value:value,children:children});};export const useAdmin=()=>{const context=useContext(AdminContext);if(!context){throw new Error('useAdmin must be used within an AdminProvider');}return context;};export default AdminContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsx","_jsx","AdminContext","adminReducer","state","action","type","_objectSpread","loading","payload","stats","recentOrders","users","map","user","id","filter","initialState","totalOrders","totalRevenue","totalUsers","totalProducts","pendingOrders","monthlyGrowth","AdminProvider","_ref","children","dispatch","loadAdminData","setTimeout","mockStats","mockRecentOrders","customer","email","total","status","date","Date","toISOString","items","now","mockUsers","firstName","lastName","role","joinDate","lastLogin","orders","totalSpent","error","console","updateOrderStatus","orderId","updatedOrders","order","updateUserRole","userId","find","u","updateUserStatus","deleteUser","isAdmin","value","refreshData","Provider","useAdmin","context","Error"],"sources":["C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/src/context/AdminContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst AdminContext = createContext();\r\n\r\nconst adminReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n\r\n    case 'SET_STATS':\r\n      return {\r\n        ...state,\r\n        stats: action.payload\r\n      };\r\n\r\n    case 'SET_RECENT_ORDERS':\r\n      return {\r\n        ...state,\r\n        recentOrders: action.payload\r\n      };\r\n\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(user => \r\n          user.id === action.payload.id ? action.payload : user\r\n        )\r\n      };\r\n\r\n    case 'DELETE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user.id !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  stats: {\r\n    totalOrders: 0,\r\n    totalRevenue: 0,\r\n    totalUsers: 0,\r\n    totalProducts: 0,\r\n    pendingOrders: 0,\r\n    monthlyGrowth: 0\r\n  },\r\n  recentOrders: [],\r\n  users: []\r\n};\r\n\r\nexport const AdminProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(adminReducer, initialState);\r\n\r\n  // Load admin data on mount\r\n  useEffect(() => {\r\n    loadAdminData();\r\n  }, []);\r\n\r\n  const loadAdminData = async () => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    \r\n    try {\r\n      // Simulate loading admin data\r\n      setTimeout(() => {\r\n        const mockStats = {\r\n          totalOrders: 1247,\r\n          totalRevenue: 89250.75,\r\n          totalUsers: 3892,\r\n          totalProducts: 156,\r\n          pendingOrders: 23,\r\n          monthlyGrowth: 12.5\r\n        };\r\n\r\n        const mockRecentOrders = [\r\n          {\r\n            id: 'ORD-001',\r\n            customer: 'John Doe',\r\n            email: 'john@example.com',\r\n            total: 129.99,\r\n            status: 'pending',\r\n            date: new Date().toISOString(),\r\n            items: 2\r\n          },\r\n          {\r\n            id: 'ORD-002',\r\n            customer: 'Sarah Wilson',\r\n            email: 'sarah@example.com',\r\n            total: 89.50,\r\n            status: 'processing',\r\n            date: new Date(Date.now() - 3600000).toISOString(),\r\n            items: 1\r\n          },\r\n          {\r\n            id: 'ORD-003',\r\n            customer: 'Mike Johnson',\r\n            email: 'mike@example.com',\r\n            total: 299.99,\r\n            status: 'shipped',\r\n            date: new Date(Date.now() - 7200000).toISOString(),\r\n            items: 3\r\n          }\r\n        ];\r\n\r\n        const mockUsers = [\r\n          {\r\n            id: '1',\r\n            firstName: 'John',\r\n            lastName: 'Doe',\r\n            email: 'john@example.com',\r\n            role: 'customer',\r\n            status: 'active',\r\n            joinDate: '2024-01-15',\r\n            lastLogin: '2024-03-20',\r\n            orders: 5,\r\n            totalSpent: 450.00\r\n          },\r\n          {\r\n            id: '2',\r\n            firstName: 'Sarah',\r\n            lastName: 'Wilson',\r\n            email: 'sarah@example.com',\r\n            role: 'customer',\r\n            status: 'active',\r\n            joinDate: '2024-02-10',\r\n            lastLogin: '2024-03-21',\r\n            orders: 3,\r\n            totalSpent: 299.50\r\n          },\r\n          {\r\n            id: '3',\r\n            firstName: 'Admin',\r\n            lastName: 'User',\r\n            email: 'admin@example.com',\r\n            role: 'admin',\r\n            status: 'active',\r\n            joinDate: '2023-12-01',\r\n            lastLogin: '2024-03-22',\r\n            orders: 0,\r\n            totalSpent: 0\r\n          }\r\n        ];\r\n\r\n        dispatch({ type: 'SET_STATS', payload: mockStats });\r\n        dispatch({ type: 'SET_RECENT_ORDERS', payload: mockRecentOrders });\r\n        dispatch({ type: 'SET_USERS', payload: mockUsers });\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error('Error loading admin data:', error);\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const updateOrderStatus = (orderId, status) => {\r\n    // In a real app, make API call to update order status\r\n    const updatedOrders = state.recentOrders.map(order =>\r\n      order.id === orderId ? { ...order, status } : order\r\n    );\r\n    dispatch({ type: 'SET_RECENT_ORDERS', payload: updatedOrders });\r\n  };\r\n\r\n  const updateUserRole = (userId, role) => {\r\n    const user = state.users.find(u => u.id === userId);\r\n    if (user) {\r\n      dispatch({ type: 'UPDATE_USER', payload: { ...user, role } });\r\n    }\r\n  };\r\n\r\n  const updateUserStatus = (userId, status) => {\r\n    const user = state.users.find(u => u.id === userId);\r\n    if (user) {\r\n      dispatch({ type: 'UPDATE_USER', payload: { ...user, status } });\r\n    }\r\n  };\r\n\r\n  const deleteUser = (userId) => {\r\n    dispatch({ type: 'DELETE_USER', payload: userId });\r\n  };\r\n\r\n  const isAdmin = (user) => {\r\n    return user && user.email === 'admin@example.com';\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    updateOrderStatus,\r\n    updateUserRole,\r\n    updateUserStatus,\r\n    deleteUser,\r\n    isAdmin,\r\n    refreshData: loadAdminData\r\n  };\r\n\r\n  return (\r\n    <AdminContext.Provider value={value}>\r\n      {children}\r\n    </AdminContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAdmin = () => {\r\n  const context = useContext(AdminContext);\r\n  if (!context) {\r\n    throw new Error('useAdmin must be used within an AdminProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AdminContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
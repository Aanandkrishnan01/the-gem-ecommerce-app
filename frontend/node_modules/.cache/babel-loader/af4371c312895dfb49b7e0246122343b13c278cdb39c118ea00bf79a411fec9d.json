{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\context\\\\SearchContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport localProductService from '../services/localProductService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContext = /*#__PURE__*/createContext();\nexport const useSearch = () => {\n  _s();\n  const context = useContext(SearchContext);\n  if (!context) {\n    throw new Error('useSearch must be used within a SearchProvider');\n  }\n  return context;\n};\n_s(useSearch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SearchProvider = ({\n  children\n}) => {\n  _s2();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchSuggestions, setSuggestions] = useState([]);\n  const [recentSearches, setRecentSearches] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [filters, setFilters] = useState({\n    category: '',\n    priceRange: [0, 1000],\n    brand: '',\n    size: '',\n    color: '',\n    rating: 0,\n    inStock: false,\n    onSale: false\n  });\n  const [sortBy, setSortBy] = useState('relevance');\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Available filter options\n  const [filterOptions, setFilterOptions] = useState({\n    categories: [],\n    brands: [],\n    sizes: [],\n    colors: [],\n    priceRanges: [{\n      label: 'Under $25',\n      min: 0,\n      max: 25\n    }, {\n      label: '$25 - $50',\n      min: 25,\n      max: 50\n    }, {\n      label: '$50 - $100',\n      min: 50,\n      max: 100\n    }, {\n      label: '$100 - $200',\n      min: 100,\n      max: 200\n    }, {\n      label: 'Over $200',\n      min: 200,\n      max: 1000\n    }]\n  });\n\n  // Sort options\n  const sortOptions = [{\n    value: 'relevance',\n    label: 'Best Match'\n  }, {\n    value: 'price_low',\n    label: 'Price: Low to High'\n  }, {\n    value: 'price_high',\n    label: 'Price: High to Low'\n  }, {\n    value: 'rating',\n    label: 'Customer Rating'\n  }, {\n    value: 'newest',\n    label: 'Newest First'\n  }, {\n    value: 'popular',\n    label: 'Most Popular'\n  }, {\n    value: 'name_asc',\n    label: 'Name: A to Z'\n  }, {\n    value: 'name_desc',\n    label: 'Name: Z to A'\n  }];\n\n  // Load recent searches from localStorage\n  useEffect(() => {\n    const savedSearches = localStorage.getItem('recentSearches');\n    if (savedSearches) {\n      setRecentSearches(JSON.parse(savedSearches));\n    }\n  }, []);\n\n  // Load filter options from products\n  useEffect(() => {\n    const loadFilterOptions = async () => {\n      try {\n        const products = await localProductService.getAllProducts();\n        const categories = [...new Set(products.map(p => p.category))];\n        const brands = [...new Set(products.map(p => p.brand).filter(Boolean))];\n        const sizes = [...new Set(products.flatMap(p => p.sizes || []))];\n        const colors = [...new Set(products.flatMap(p => p.colors || []))];\n        setFilterOptions(prev => ({\n          ...prev,\n          categories,\n          brands,\n          sizes,\n          colors\n        }));\n      } catch (error) {\n        console.error('Error loading filter options:', error);\n      }\n    };\n    loadFilterOptions();\n  }, []);\n\n  // Perform search with debouncing\n  useEffect(() => {\n    const debounceTimer = setTimeout(() => {\n      if (searchQuery.trim()) {\n        performSearch(searchQuery);\n      } else {\n        setSearchResults([]);\n        setSuggestions([]);\n      }\n    }, 300);\n    return () => clearTimeout(debounceTimer);\n  }, [searchQuery, filters, sortBy]);\n\n  // Generate search suggestions\n  useEffect(() => {\n    const generateSuggestions = async () => {\n      if (searchQuery.length >= 2) {\n        try {\n          const products = await localProductService.getAllProducts();\n          const suggestions = [];\n\n          // Product name suggestions\n          products.forEach(product => {\n            if (product.name.toLowerCase().includes(searchQuery.toLowerCase())) {\n              suggestions.push({\n                type: 'product',\n                text: product.name,\n                category: product.category,\n                id: product.id\n              });\n            }\n          });\n\n          // Category suggestions\n          filterOptions.categories.forEach(category => {\n            if (category.toLowerCase().includes(searchQuery.toLowerCase())) {\n              suggestions.push({\n                type: 'category',\n                text: category,\n                category: category\n              });\n            }\n          });\n\n          // Brand suggestions\n          filterOptions.brands.forEach(brand => {\n            if (brand.toLowerCase().includes(searchQuery.toLowerCase())) {\n              suggestions.push({\n                type: 'brand',\n                text: brand,\n                category: 'brand'\n              });\n            }\n          });\n          setSuggestions(suggestions.slice(0, 8));\n        } catch (error) {\n          console.error('Error generating suggestions:', error);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    };\n    const debounceTimer = setTimeout(generateSuggestions, 200);\n    return () => clearTimeout(debounceTimer);\n  }, [searchQuery, filterOptions]);\n  const performSearch = async query => {\n    setIsSearching(true);\n    try {\n      const products = await localProductService.getAllProducts();\n      let results = products;\n\n      // Text search\n      if (query.trim()) {\n        const searchTerms = query.toLowerCase().split(' ');\n        results = results.filter(product => {\n          const searchableText = `${product.name} ${product.description} ${product.category} ${product.brand || ''} ${(product.tags || []).join(' ')}`.toLowerCase();\n          return searchTerms.every(term => searchableText.includes(term));\n        });\n      }\n\n      // Apply filters\n      if (filters.category) {\n        results = results.filter(p => p.category === filters.category);\n      }\n      if (filters.brand) {\n        results = results.filter(p => p.brand === filters.brand);\n      }\n      if (filters.size) {\n        results = results.filter(p => p.sizes && p.sizes.includes(filters.size));\n      }\n      if (filters.color) {\n        results = results.filter(p => p.colors && p.colors.includes(filters.color));\n      }\n      if (filters.rating > 0) {\n        results = results.filter(p => p.rating && p.rating.average >= filters.rating);\n      }\n      if (filters.inStock) {\n        results = results.filter(p => p.inStock);\n      }\n      if (filters.onSale) {\n        results = results.filter(p => p.originalPrice && p.originalPrice > p.price);\n      }\n\n      // Price range filter\n      results = results.filter(p => p.price >= filters.priceRange[0] && p.price <= filters.priceRange[1]);\n\n      // Apply sorting\n      results = sortResults(results, sortBy);\n      setSearchResults(results);\n\n      // Save search to recent searches\n      if (query.trim()) {\n        saveRecentSearch(query);\n      }\n    } catch (error) {\n      console.error('Search error:', error);\n      setSearchResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const sortResults = (results, sortType) => {\n    const sortedResults = [...results];\n    switch (sortType) {\n      case 'price_low':\n        return sortedResults.sort((a, b) => a.price - b.price);\n      case 'price_high':\n        return sortedResults.sort((a, b) => b.price - a.price);\n      case 'rating':\n        return sortedResults.sort((a, b) => {\n          var _b$rating, _a$rating;\n          return (((_b$rating = b.rating) === null || _b$rating === void 0 ? void 0 : _b$rating.average) || 0) - (((_a$rating = a.rating) === null || _a$rating === void 0 ? void 0 : _a$rating.average) || 0);\n        });\n      case 'newest':\n        return sortedResults.sort((a, b) => new Date(b.createdAt || 0) - new Date(a.createdAt || 0));\n      case 'popular':\n        return sortedResults.sort((a, b) => {\n          var _b$rating2, _a$rating2;\n          return (((_b$rating2 = b.rating) === null || _b$rating2 === void 0 ? void 0 : _b$rating2.count) || 0) - (((_a$rating2 = a.rating) === null || _a$rating2 === void 0 ? void 0 : _a$rating2.count) || 0);\n        });\n      case 'name_asc':\n        return sortedResults.sort((a, b) => a.name.localeCompare(b.name));\n      case 'name_desc':\n        return sortedResults.sort((a, b) => b.name.localeCompare(a.name));\n      default:\n        return sortedResults;\n      // relevance (default order)\n    }\n  };\n  const saveRecentSearch = query => {\n    const updated = [query, ...recentSearches.filter(s => s !== query)].slice(0, 10);\n    setRecentSearches(updated);\n    localStorage.setItem('recentSearches', JSON.stringify(updated));\n  };\n  const clearRecentSearches = () => {\n    setRecentSearches([]);\n    localStorage.removeItem('recentSearches');\n  };\n  const updateFilter = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n  const clearFilters = () => {\n    setFilters({\n      category: '',\n      priceRange: [0, 1000],\n      brand: '',\n      size: '',\n      color: '',\n      rating: 0,\n      inStock: false,\n      onSale: false\n    });\n  };\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSearchResults([]);\n    setSuggestions([]);\n    clearFilters();\n  };\n  const getActiveFiltersCount = () => {\n    let count = 0;\n    if (filters.category) count++;\n    if (filters.brand) count++;\n    if (filters.size) count++;\n    if (filters.color) count++;\n    if (filters.rating > 0) count++;\n    if (filters.inStock) count++;\n    if (filters.onSale) count++;\n    if (filters.priceRange[0] > 0 || filters.priceRange[1] < 1000) count++;\n    return count;\n  };\n  const value = {\n    // Search state\n    searchQuery,\n    setSearchQuery,\n    searchResults,\n    searchSuggestions,\n    recentSearches,\n    isSearching,\n    // Filters\n    filters,\n    updateFilter,\n    clearFilters,\n    showFilters,\n    setShowFilters,\n    filterOptions,\n    getActiveFiltersCount,\n    // Sorting\n    sortBy,\n    setSortBy,\n    sortOptions,\n    // Actions\n    performSearch,\n    clearSearch,\n    clearRecentSearches,\n    saveRecentSearch\n  };\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n_s2(SearchProvider, \"ugdmbewEAiZYhdDWroZhDqO+Sbk=\");\n_c = SearchProvider;\nvar _c;\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","localProductService","jsxDEV","_jsxDEV","SearchContext","useSearch","_s","context","Error","SearchProvider","children","_s2","searchQuery","setSearchQuery","searchResults","setSearchResults","searchSuggestions","setSuggestions","recentSearches","setRecentSearches","isSearching","setIsSearching","filters","setFilters","category","priceRange","brand","size","color","rating","inStock","onSale","sortBy","setSortBy","showFilters","setShowFilters","filterOptions","setFilterOptions","categories","brands","sizes","colors","priceRanges","label","min","max","sortOptions","value","savedSearches","localStorage","getItem","JSON","parse","loadFilterOptions","products","getAllProducts","Set","map","p","filter","Boolean","flatMap","prev","error","console","debounceTimer","setTimeout","trim","performSearch","clearTimeout","generateSuggestions","length","suggestions","forEach","product","name","toLowerCase","includes","push","type","text","id","slice","query","results","searchTerms","split","searchableText","description","tags","join","every","term","average","originalPrice","price","sortResults","saveRecentSearch","sortType","sortedResults","sort","a","b","_b$rating","_a$rating","Date","createdAt","_b$rating2","_a$rating2","count","localeCompare","updated","s","setItem","stringify","clearRecentSearches","removeItem","updateFilter","filterType","clearFilters","clearSearch","getActiveFiltersCount","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/src/context/SearchContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport localProductService from '../services/localProductService';\r\n\r\nconst SearchContext = createContext();\r\n\r\nexport const useSearch = () => {\r\n  const context = useContext(SearchContext);\r\n  if (!context) {\r\n    throw new Error('useSearch must be used within a SearchProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SearchProvider = ({ children }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchSuggestions, setSuggestions] = useState([]);\r\n  const [recentSearches, setRecentSearches] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    category: '',\r\n    priceRange: [0, 1000],\r\n    brand: '',\r\n    size: '',\r\n    color: '',\r\n    rating: 0,\r\n    inStock: false,\r\n    onSale: false\r\n  });\r\n  const [sortBy, setSortBy] = useState('relevance');\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  // Available filter options\r\n  const [filterOptions, setFilterOptions] = useState({\r\n    categories: [],\r\n    brands: [],\r\n    sizes: [],\r\n    colors: [],\r\n    priceRanges: [\r\n      { label: 'Under $25', min: 0, max: 25 },\r\n      { label: '$25 - $50', min: 25, max: 50 },\r\n      { label: '$50 - $100', min: 50, max: 100 },\r\n      { label: '$100 - $200', min: 100, max: 200 },\r\n      { label: 'Over $200', min: 200, max: 1000 }\r\n    ]\r\n  });\r\n\r\n  // Sort options\r\n  const sortOptions = [\r\n    { value: 'relevance', label: 'Best Match' },\r\n    { value: 'price_low', label: 'Price: Low to High' },\r\n    { value: 'price_high', label: 'Price: High to Low' },\r\n    { value: 'rating', label: 'Customer Rating' },\r\n    { value: 'newest', label: 'Newest First' },\r\n    { value: 'popular', label: 'Most Popular' },\r\n    { value: 'name_asc', label: 'Name: A to Z' },\r\n    { value: 'name_desc', label: 'Name: Z to A' }\r\n  ];\r\n\r\n  // Load recent searches from localStorage\r\n  useEffect(() => {\r\n    const savedSearches = localStorage.getItem('recentSearches');\r\n    if (savedSearches) {\r\n      setRecentSearches(JSON.parse(savedSearches));\r\n    }\r\n  }, []);\r\n\r\n  // Load filter options from products\r\n  useEffect(() => {\r\n    const loadFilterOptions = async () => {\r\n      try {\r\n        const products = await localProductService.getAllProducts();\r\n        \r\n        const categories = [...new Set(products.map(p => p.category))];\r\n        const brands = [...new Set(products.map(p => p.brand).filter(Boolean))];\r\n        const sizes = [...new Set(products.flatMap(p => p.sizes || []))];\r\n        const colors = [...new Set(products.flatMap(p => p.colors || []))];\r\n\r\n        setFilterOptions(prev => ({\r\n          ...prev,\r\n          categories,\r\n          brands,\r\n          sizes,\r\n          colors\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error loading filter options:', error);\r\n      }\r\n    };\r\n\r\n    loadFilterOptions();\r\n  }, []);\r\n\r\n  // Perform search with debouncing\r\n  useEffect(() => {\r\n    const debounceTimer = setTimeout(() => {\r\n      if (searchQuery.trim()) {\r\n        performSearch(searchQuery);\r\n      } else {\r\n        setSearchResults([]);\r\n        setSuggestions([]);\r\n      }\r\n    }, 300);\r\n\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [searchQuery, filters, sortBy]);\r\n\r\n  // Generate search suggestions\r\n  useEffect(() => {\r\n    const generateSuggestions = async () => {\r\n      if (searchQuery.length >= 2) {\r\n        try {\r\n          const products = await localProductService.getAllProducts();\r\n          const suggestions = [];\r\n\r\n          // Product name suggestions\r\n          products.forEach(product => {\r\n            if (product.name.toLowerCase().includes(searchQuery.toLowerCase())) {\r\n              suggestions.push({\r\n                type: 'product',\r\n                text: product.name,\r\n                category: product.category,\r\n                id: product.id\r\n              });\r\n            }\r\n          });\r\n\r\n          // Category suggestions\r\n          filterOptions.categories.forEach(category => {\r\n            if (category.toLowerCase().includes(searchQuery.toLowerCase())) {\r\n              suggestions.push({\r\n                type: 'category',\r\n                text: category,\r\n                category: category\r\n              });\r\n            }\r\n          });\r\n\r\n          // Brand suggestions\r\n          filterOptions.brands.forEach(brand => {\r\n            if (brand.toLowerCase().includes(searchQuery.toLowerCase())) {\r\n              suggestions.push({\r\n                type: 'brand',\r\n                text: brand,\r\n                category: 'brand'\r\n              });\r\n            }\r\n          });\r\n\r\n          setSuggestions(suggestions.slice(0, 8));\r\n        } catch (error) {\r\n          console.error('Error generating suggestions:', error);\r\n        }\r\n      } else {\r\n        setSuggestions([]);\r\n      }\r\n    };\r\n\r\n    const debounceTimer = setTimeout(generateSuggestions, 200);\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [searchQuery, filterOptions]);\r\n\r\n  const performSearch = async (query) => {\r\n    setIsSearching(true);\r\n    \r\n    try {\r\n      const products = await localProductService.getAllProducts();\r\n      let results = products;\r\n\r\n      // Text search\r\n      if (query.trim()) {\r\n        const searchTerms = query.toLowerCase().split(' ');\r\n        results = results.filter(product => {\r\n          const searchableText = `${product.name} ${product.description} ${product.category} ${product.brand || ''} ${(product.tags || []).join(' ')}`.toLowerCase();\r\n          return searchTerms.every(term => searchableText.includes(term));\r\n        });\r\n      }\r\n\r\n      // Apply filters\r\n      if (filters.category) {\r\n        results = results.filter(p => p.category === filters.category);\r\n      }\r\n\r\n      if (filters.brand) {\r\n        results = results.filter(p => p.brand === filters.brand);\r\n      }\r\n\r\n      if (filters.size) {\r\n        results = results.filter(p => p.sizes && p.sizes.includes(filters.size));\r\n      }\r\n\r\n      if (filters.color) {\r\n        results = results.filter(p => p.colors && p.colors.includes(filters.color));\r\n      }\r\n\r\n      if (filters.rating > 0) {\r\n        results = results.filter(p => p.rating && p.rating.average >= filters.rating);\r\n      }\r\n\r\n      if (filters.inStock) {\r\n        results = results.filter(p => p.inStock);\r\n      }\r\n\r\n      if (filters.onSale) {\r\n        results = results.filter(p => p.originalPrice && p.originalPrice > p.price);\r\n      }\r\n\r\n      // Price range filter\r\n      results = results.filter(p => \r\n        p.price >= filters.priceRange[0] && p.price <= filters.priceRange[1]\r\n      );\r\n\r\n      // Apply sorting\r\n      results = sortResults(results, sortBy);\r\n\r\n      setSearchResults(results);\r\n\r\n      // Save search to recent searches\r\n      if (query.trim()) {\r\n        saveRecentSearch(query);\r\n      }\r\n    } catch (error) {\r\n      console.error('Search error:', error);\r\n      setSearchResults([]);\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  const sortResults = (results, sortType) => {\r\n    const sortedResults = [...results];\r\n\r\n    switch (sortType) {\r\n      case 'price_low':\r\n        return sortedResults.sort((a, b) => a.price - b.price);\r\n      case 'price_high':\r\n        return sortedResults.sort((a, b) => b.price - a.price);\r\n      case 'rating':\r\n        return sortedResults.sort((a, b) => (b.rating?.average || 0) - (a.rating?.average || 0));\r\n      case 'newest':\r\n        return sortedResults.sort((a, b) => new Date(b.createdAt || 0) - new Date(a.createdAt || 0));\r\n      case 'popular':\r\n        return sortedResults.sort((a, b) => (b.rating?.count || 0) - (a.rating?.count || 0));\r\n      case 'name_asc':\r\n        return sortedResults.sort((a, b) => a.name.localeCompare(b.name));\r\n      case 'name_desc':\r\n        return sortedResults.sort((a, b) => b.name.localeCompare(a.name));\r\n      default:\r\n        return sortedResults; // relevance (default order)\r\n    }\r\n  };\r\n\r\n  const saveRecentSearch = (query) => {\r\n    const updated = [query, ...recentSearches.filter(s => s !== query)].slice(0, 10);\r\n    setRecentSearches(updated);\r\n    localStorage.setItem('recentSearches', JSON.stringify(updated));\r\n  };\r\n\r\n  const clearRecentSearches = () => {\r\n    setRecentSearches([]);\r\n    localStorage.removeItem('recentSearches');\r\n  };\r\n\r\n  const updateFilter = (filterType, value) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [filterType]: value\r\n    }));\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setFilters({\r\n      category: '',\r\n      priceRange: [0, 1000],\r\n      brand: '',\r\n      size: '',\r\n      color: '',\r\n      rating: 0,\r\n      inStock: false,\r\n      onSale: false\r\n    });\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setSearchQuery('');\r\n    setSearchResults([]);\r\n    setSuggestions([]);\r\n    clearFilters();\r\n  };\r\n\r\n  const getActiveFiltersCount = () => {\r\n    let count = 0;\r\n    if (filters.category) count++;\r\n    if (filters.brand) count++;\r\n    if (filters.size) count++;\r\n    if (filters.color) count++;\r\n    if (filters.rating > 0) count++;\r\n    if (filters.inStock) count++;\r\n    if (filters.onSale) count++;\r\n    if (filters.priceRange[0] > 0 || filters.priceRange[1] < 1000) count++;\r\n    return count;\r\n  };\r\n\r\n  const value = {\r\n    // Search state\r\n    searchQuery,\r\n    setSearchQuery,\r\n    searchResults,\r\n    searchSuggestions,\r\n    recentSearches,\r\n    isSearching,\r\n    \r\n    // Filters\r\n    filters,\r\n    updateFilter,\r\n    clearFilters,\r\n    showFilters,\r\n    setShowFilters,\r\n    filterOptions,\r\n    getActiveFiltersCount,\r\n    \r\n    // Sorting\r\n    sortBy,\r\n    setSortBy,\r\n    sortOptions,\r\n    \r\n    // Actions\r\n    performSearch,\r\n    clearSearch,\r\n    clearRecentSearches,\r\n    saveRecentSearch\r\n  };\r\n\r\n  return (\r\n    <SearchContext.Provider value={value}>\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import localProductService from'../services/localProductService';import{jsx as _jsx}from\"react/jsx-runtime\";const SearchContext=/*#__PURE__*/createContext();export const useSearch=()=>{const context=useContext(SearchContext);if(!context){throw new Error('useSearch must be used within a SearchProvider');}return context;};export const SearchProvider=_ref=>{let{children}=_ref;const[searchQuery,setSearchQuery]=useState('');const[searchResults,setSearchResults]=useState([]);const[searchSuggestions,setSuggestions]=useState([]);const[recentSearches,setRecentSearches]=useState([]);const[isSearching,setIsSearching]=useState(false);const[filters,setFilters]=useState({category:'',priceRange:[0,1000],brand:'',size:'',color:'',rating:0,inStock:false,onSale:false});const[sortBy,setSortBy]=useState('relevance');const[showFilters,setShowFilters]=useState(false);// Available filter options\nconst[filterOptions,setFilterOptions]=useState({categories:[],brands:[],sizes:[],colors:[],priceRanges:[{label:'Under $25',min:0,max:25},{label:'$25 - $50',min:25,max:50},{label:'$50 - $100',min:50,max:100},{label:'$100 - $200',min:100,max:200},{label:'Over $200',min:200,max:1000}]});// Sort options\nconst sortOptions=[{value:'relevance',label:'Best Match'},{value:'price_low',label:'Price: Low to High'},{value:'price_high',label:'Price: High to Low'},{value:'rating',label:'Customer Rating'},{value:'newest',label:'Newest First'},{value:'popular',label:'Most Popular'},{value:'name_asc',label:'Name: A to Z'},{value:'name_desc',label:'Name: Z to A'}];// Load recent searches from localStorage\nuseEffect(()=>{const savedSearches=localStorage.getItem('recentSearches');if(savedSearches){setRecentSearches(JSON.parse(savedSearches));}},[]);// Load filter options from products\nuseEffect(()=>{const loadFilterOptions=async()=>{try{const products=await localProductService.getAllProducts();const categories=[...new Set(products.map(p=>p.category))];const brands=[...new Set(products.map(p=>p.brand).filter(Boolean))];const sizes=[...new Set(products.flatMap(p=>p.sizes||[]))];const colors=[...new Set(products.flatMap(p=>p.colors||[]))];setFilterOptions(prev=>_objectSpread(_objectSpread({},prev),{},{categories,brands,sizes,colors}));}catch(error){console.error('Error loading filter options:',error);}};loadFilterOptions();// Load all products initially\nconst loadInitialProducts=async()=>{try{const products=await localProductService.getAllProducts();if(Array.isArray(products)){setSearchResults(products);}}catch(error){console.error('Error loading initial products:',error);setSearchResults([]);}};loadInitialProducts();},[]);// Perform search with debouncing\nuseEffect(()=>{const debounceTimer=setTimeout(()=>{performSearch(searchQuery||'');},300);return()=>clearTimeout(debounceTimer);},[searchQuery,filters,sortBy]);// Generate search suggestions\nuseEffect(()=>{const generateSuggestions=async()=>{if(!searchQuery||searchQuery.length<2){setSuggestions([]);return;}try{const products=await localProductService.getAllProducts();if(!Array.isArray(products)){console.warn('generateSuggestions: products is not an array:',products);setSuggestions([]);return;}const suggestions=[];const searchLower=searchQuery.toLowerCase().trim();// Product name suggestions with null checks\nproducts.forEach(product=>{try{if(product!==null&&product!==void 0&&product.name&&typeof product.name==='string'){if(product.name.toLowerCase().includes(searchLower)){suggestions.push({type:'product',text:product.name,category:product.category||'uncategorized',id:product.id});}}}catch(error){console.warn('Error processing product suggestion:',product,error);}});// Category suggestions with null checks\nif(Array.isArray(filterOptions.categories)){filterOptions.categories.forEach(category=>{try{if(category&&typeof category==='string'){if(category.toLowerCase().includes(searchLower)){suggestions.push({type:'category',text:category,category:category});}}}catch(error){console.warn('Error processing category suggestion:',category,error);}});}// Brand suggestions with null checks\nif(Array.isArray(filterOptions.brands)){filterOptions.brands.forEach(brand=>{try{if(brand&&typeof brand==='string'){if(brand.toLowerCase().includes(searchLower)){suggestions.push({type:'brand',text:brand,category:'brand'});}}}catch(error){console.warn('Error processing brand suggestion:',brand,error);}});}setSuggestions(suggestions.slice(0,8));}catch(error){console.error('Error generating suggestions:',error);setSuggestions([]);}};const debounceTimer=setTimeout(generateSuggestions,200);return()=>clearTimeout(debounceTimer);},[searchQuery,filterOptions]);const performSearch=async query=>{setIsSearching(true);try{const products=await localProductService.getAllProducts();// Validate products array\nif(!Array.isArray(products)){console.warn('Products is not an array:',products);setSearchResults([]);return;}let results=[...products];// Create a copy to avoid mutations\n// Text search with better error handling\nif(query&&query.trim()){const searchTerms=query.toLowerCase().split(' ').filter(term=>term.length>0);results=results.filter(product=>{try{// Safely build searchable text with null checks\nconst name=(product===null||product===void 0?void 0:product.name)||'';const description=(product===null||product===void 0?void 0:product.description)||'';const category=(product===null||product===void 0?void 0:product.category)||'';const brand=(product===null||product===void 0?void 0:product.brand)||'';const tags=Array.isArray(product===null||product===void 0?void 0:product.tags)?product.tags.join(' '):'';const searchableText=\"\".concat(name,\" \").concat(description,\" \").concat(category,\" \").concat(brand,\" \").concat(tags).toLowerCase();return searchTerms.every(term=>searchableText.includes(term));}catch(filterError){console.warn('Error filtering product:',product,filterError);return false;}});}// Apply filters with null checks\nif(filters.category){results=results.filter(p=>(p===null||p===void 0?void 0:p.category)===filters.category);}if(filters.brand){results=results.filter(p=>(p===null||p===void 0?void 0:p.brand)===filters.brand);}if(filters.size){results=results.filter(p=>Array.isArray(p===null||p===void 0?void 0:p.sizes)&&p.sizes.includes(filters.size));}if(filters.color){results=results.filter(p=>Array.isArray(p===null||p===void 0?void 0:p.colors)&&p.colors.includes(filters.color));}if(filters.rating>0){results=results.filter(p=>{var _p$rating;return(p===null||p===void 0?void 0:(_p$rating=p.rating)===null||_p$rating===void 0?void 0:_p$rating.average)&&p.rating.average>=filters.rating;});}if(filters.inStock){results=results.filter(p=>(p===null||p===void 0?void 0:p.inStock)===true);}if(filters.onSale){results=results.filter(p=>(p===null||p===void 0?void 0:p.originalPrice)&&(p===null||p===void 0?void 0:p.price)&&p.originalPrice>p.price);}// Price range filter with null checks\nif(Array.isArray(filters.priceRange)&&filters.priceRange.length===2){results=results.filter(p=>{const price=parseFloat(p===null||p===void 0?void 0:p.price);return!isNaN(price)&&price>=filters.priceRange[0]&&price<=filters.priceRange[1];});}// Apply sorting\nresults=sortResults(results,sortBy);setSearchResults(results||[]);// Save search to recent searches\nif(query&&query.trim()){saveRecentSearch(query.trim());}}catch(error){console.error('Search error:',error);setSearchResults([]);}finally{setIsSearching(false);}};const sortResults=(results,sortType)=>{if(!Array.isArray(results)){console.warn('sortResults received invalid results:',results);return[];}const sortedResults=[...results];try{switch(sortType){case'price_low':return sortedResults.sort((a,b)=>{const priceA=parseFloat(a===null||a===void 0?void 0:a.price)||0;const priceB=parseFloat(b===null||b===void 0?void 0:b.price)||0;return priceA-priceB;});case'price_high':return sortedResults.sort((a,b)=>{const priceA=parseFloat(a===null||a===void 0?void 0:a.price)||0;const priceB=parseFloat(b===null||b===void 0?void 0:b.price)||0;return priceB-priceA;});case'rating':return sortedResults.sort((a,b)=>{var _a$rating,_b$rating;const ratingA=(a===null||a===void 0?void 0:(_a$rating=a.rating)===null||_a$rating===void 0?void 0:_a$rating.average)||0;const ratingB=(b===null||b===void 0?void 0:(_b$rating=b.rating)===null||_b$rating===void 0?void 0:_b$rating.average)||0;return ratingB-ratingA;});case'newest':return sortedResults.sort((a,b)=>{const dateA=new Date((a===null||a===void 0?void 0:a.createdAt)||0);const dateB=new Date((b===null||b===void 0?void 0:b.createdAt)||0);return dateB-dateA;});case'popular':return sortedResults.sort((a,b)=>{var _a$rating2,_b$rating2;const countA=(a===null||a===void 0?void 0:(_a$rating2=a.rating)===null||_a$rating2===void 0?void 0:_a$rating2.count)||0;const countB=(b===null||b===void 0?void 0:(_b$rating2=b.rating)===null||_b$rating2===void 0?void 0:_b$rating2.count)||0;return countB-countA;});case'name_asc':return sortedResults.sort((a,b)=>{const nameA=((a===null||a===void 0?void 0:a.name)||'').toLowerCase();const nameB=((b===null||b===void 0?void 0:b.name)||'').toLowerCase();return nameA.localeCompare(nameB);});case'name_desc':return sortedResults.sort((a,b)=>{const nameA=((a===null||a===void 0?void 0:a.name)||'').toLowerCase();const nameB=((b===null||b===void 0?void 0:b.name)||'').toLowerCase();return nameB.localeCompare(nameA);});default:return sortedResults;// relevance (default order)\n}}catch(sortError){console.error('Error sorting results:',sortError);return results;}};const saveRecentSearch=query=>{try{if(!query||typeof query!=='string'||query.trim().length===0){return;}const trimmedQuery=query.trim();const currentSearches=Array.isArray(recentSearches)?recentSearches:[];const updated=[trimmedQuery,...currentSearches.filter(s=>s!==trimmedQuery)].slice(0,10);setRecentSearches(updated);localStorage.setItem('recentSearches',JSON.stringify(updated));}catch(error){console.error('Error saving recent search:',error);}};const clearRecentSearches=()=>{try{setRecentSearches([]);localStorage.removeItem('recentSearches');}catch(error){console.error('Error clearing recent searches:',error);}};const updateFilter=(filterType,value)=>{setFilters(prev=>_objectSpread(_objectSpread({},prev),{},{[filterType]:value}));};const clearFilters=()=>{setFilters({category:'',priceRange:[0,1000],brand:'',size:'',color:'',rating:0,inStock:false,onSale:false});};const clearSearch=()=>{setSearchQuery('');setSearchResults([]);setSuggestions([]);clearFilters();};const getActiveFiltersCount=()=>{let count=0;if(filters.category)count++;if(filters.brand)count++;if(filters.size)count++;if(filters.color)count++;if(filters.rating>0)count++;if(filters.inStock)count++;if(filters.onSale)count++;if(filters.priceRange[0]>0||filters.priceRange[1]<1000)count++;return count;};const value={// Search state\nsearchQuery,setSearchQuery,searchResults,searchSuggestions,recentSearches,isSearching,// Filters\nfilters,updateFilter,clearFilters,showFilters,setShowFilters,filterOptions,getActiveFiltersCount,// Sorting\nsortBy,setSortBy,sortOptions,// Actions\nperformSearch,clearSearch,clearRecentSearches,saveRecentSearch};return/*#__PURE__*/_jsx(SearchContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","localProductService","jsx","_jsx","SearchContext","useSearch","context","Error","SearchProvider","_ref","children","searchQuery","setSearchQuery","searchResults","setSearchResults","searchSuggestions","setSuggestions","recentSearches","setRecentSearches","isSearching","setIsSearching","filters","setFilters","category","priceRange","brand","size","color","rating","inStock","onSale","sortBy","setSortBy","showFilters","setShowFilters","filterOptions","setFilterOptions","categories","brands","sizes","colors","priceRanges","label","min","max","sortOptions","value","savedSearches","localStorage","getItem","JSON","parse","loadFilterOptions","products","getAllProducts","Set","map","p","filter","Boolean","flatMap","prev","_objectSpread","error","console","loadInitialProducts","Array","isArray","debounceTimer","setTimeout","performSearch","clearTimeout","generateSuggestions","length","warn","suggestions","searchLower","toLowerCase","trim","forEach","product","name","includes","push","type","text","id","slice","query","results","searchTerms","split","term","description","tags","join","searchableText","concat","every","filterError","_p$rating","average","originalPrice","price","parseFloat","isNaN","sortResults","saveRecentSearch","sortType","sortedResults","sort","a","b","priceA","priceB","_a$rating","_b$rating","ratingA","ratingB","dateA","Date","createdAt","dateB","_a$rating2","_b$rating2","countA","count","countB","nameA","nameB","localeCompare","sortError","trimmedQuery","currentSearches","updated","s","setItem","stringify","clearRecentSearches","removeItem","updateFilter","filterType","clearFilters","clearSearch","getActiveFiltersCount","Provider"],"sources":["C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/src/context/SearchContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport localProductService from '../services/localProductService';\r\n\r\nconst SearchContext = createContext();\r\n\r\nexport const useSearch = () => {\r\n  const context = useContext(SearchContext);\r\n  if (!context) {\r\n    throw new Error('useSearch must be used within a SearchProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SearchProvider = ({ children }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchSuggestions, setSuggestions] = useState([]);\r\n  const [recentSearches, setRecentSearches] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    category: '',\r\n    priceRange: [0, 1000],\r\n    brand: '',\r\n    size: '',\r\n    color: '',\r\n    rating: 0,\r\n    inStock: false,\r\n    onSale: false\r\n  });\r\n  const [sortBy, setSortBy] = useState('relevance');\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  // Available filter options\r\n  const [filterOptions, setFilterOptions] = useState({\r\n    categories: [],\r\n    brands: [],\r\n    sizes: [],\r\n    colors: [],\r\n    priceRanges: [\r\n      { label: 'Under $25', min: 0, max: 25 },\r\n      { label: '$25 - $50', min: 25, max: 50 },\r\n      { label: '$50 - $100', min: 50, max: 100 },\r\n      { label: '$100 - $200', min: 100, max: 200 },\r\n      { label: 'Over $200', min: 200, max: 1000 }\r\n    ]\r\n  });\r\n\r\n  // Sort options\r\n  const sortOptions = [\r\n    { value: 'relevance', label: 'Best Match' },\r\n    { value: 'price_low', label: 'Price: Low to High' },\r\n    { value: 'price_high', label: 'Price: High to Low' },\r\n    { value: 'rating', label: 'Customer Rating' },\r\n    { value: 'newest', label: 'Newest First' },\r\n    { value: 'popular', label: 'Most Popular' },\r\n    { value: 'name_asc', label: 'Name: A to Z' },\r\n    { value: 'name_desc', label: 'Name: Z to A' }\r\n  ];\r\n\r\n  // Load recent searches from localStorage\r\n  useEffect(() => {\r\n    const savedSearches = localStorage.getItem('recentSearches');\r\n    if (savedSearches) {\r\n      setRecentSearches(JSON.parse(savedSearches));\r\n    }\r\n  }, []);\r\n\r\n  // Load filter options from products\r\n  useEffect(() => {\r\n    const loadFilterOptions = async () => {\r\n      try {\r\n        const products = await localProductService.getAllProducts();\r\n        \r\n        const categories = [...new Set(products.map(p => p.category))];\r\n        const brands = [...new Set(products.map(p => p.brand).filter(Boolean))];\r\n        const sizes = [...new Set(products.flatMap(p => p.sizes || []))];\r\n        const colors = [...new Set(products.flatMap(p => p.colors || []))];\r\n\r\n        setFilterOptions(prev => ({\r\n          ...prev,\r\n          categories,\r\n          brands,\r\n          sizes,\r\n          colors\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error loading filter options:', error);\r\n      }\r\n    };\r\n\r\n    loadFilterOptions();\r\n    \r\n    // Load all products initially\r\n    const loadInitialProducts = async () => {\r\n      try {\r\n        const products = await localProductService.getAllProducts();\r\n        if (Array.isArray(products)) {\r\n          setSearchResults(products);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading initial products:', error);\r\n        setSearchResults([]);\r\n      }\r\n    };\r\n    \r\n    loadInitialProducts();\r\n  }, []);\r\n\r\n  // Perform search with debouncing\r\n  useEffect(() => {\r\n    const debounceTimer = setTimeout(() => {\r\n      performSearch(searchQuery || '');\r\n    }, 300);\r\n\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [searchQuery, filters, sortBy]);\r\n\r\n  // Generate search suggestions\r\n  useEffect(() => {\r\n    const generateSuggestions = async () => {\r\n      if (!searchQuery || searchQuery.length < 2) {\r\n        setSuggestions([]);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const products = await localProductService.getAllProducts();\r\n        \r\n        if (!Array.isArray(products)) {\r\n          console.warn('generateSuggestions: products is not an array:', products);\r\n          setSuggestions([]);\r\n          return;\r\n        }\r\n\r\n        const suggestions = [];\r\n        const searchLower = searchQuery.toLowerCase().trim();\r\n\r\n        // Product name suggestions with null checks\r\n        products.forEach(product => {\r\n          try {\r\n            if (product?.name && typeof product.name === 'string') {\r\n              if (product.name.toLowerCase().includes(searchLower)) {\r\n                suggestions.push({\r\n                  type: 'product',\r\n                  text: product.name,\r\n                  category: product.category || 'uncategorized',\r\n                  id: product.id\r\n                });\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.warn('Error processing product suggestion:', product, error);\r\n          }\r\n        });\r\n\r\n        // Category suggestions with null checks\r\n        if (Array.isArray(filterOptions.categories)) {\r\n          filterOptions.categories.forEach(category => {\r\n            try {\r\n              if (category && typeof category === 'string') {\r\n                if (category.toLowerCase().includes(searchLower)) {\r\n                  suggestions.push({\r\n                    type: 'category',\r\n                    text: category,\r\n                    category: category\r\n                  });\r\n                }\r\n              }\r\n            } catch (error) {\r\n              console.warn('Error processing category suggestion:', category, error);\r\n            }\r\n          });\r\n        }\r\n\r\n        // Brand suggestions with null checks\r\n        if (Array.isArray(filterOptions.brands)) {\r\n          filterOptions.brands.forEach(brand => {\r\n            try {\r\n              if (brand && typeof brand === 'string') {\r\n                if (brand.toLowerCase().includes(searchLower)) {\r\n                  suggestions.push({\r\n                    type: 'brand',\r\n                    text: brand,\r\n                    category: 'brand'\r\n                  });\r\n                }\r\n              }\r\n            } catch (error) {\r\n              console.warn('Error processing brand suggestion:', brand, error);\r\n            }\r\n          });\r\n        }\r\n\r\n        setSuggestions(suggestions.slice(0, 8));\r\n      } catch (error) {\r\n        console.error('Error generating suggestions:', error);\r\n        setSuggestions([]);\r\n      }\r\n    };\r\n\r\n    const debounceTimer = setTimeout(generateSuggestions, 200);\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [searchQuery, filterOptions]);\r\n\r\n  const performSearch = async (query) => {\r\n    setIsSearching(true);\r\n    \r\n    try {\r\n      const products = await localProductService.getAllProducts();\r\n      \r\n      // Validate products array\r\n      if (!Array.isArray(products)) {\r\n        console.warn('Products is not an array:', products);\r\n        setSearchResults([]);\r\n        return;\r\n      }\r\n\r\n      let results = [...products]; // Create a copy to avoid mutations\r\n\r\n      // Text search with better error handling\r\n      if (query && query.trim()) {\r\n        const searchTerms = query.toLowerCase().split(' ').filter(term => term.length > 0);\r\n        \r\n        results = results.filter(product => {\r\n          try {\r\n            // Safely build searchable text with null checks\r\n            const name = product?.name || '';\r\n            const description = product?.description || '';\r\n            const category = product?.category || '';\r\n            const brand = product?.brand || '';\r\n            const tags = Array.isArray(product?.tags) ? product.tags.join(' ') : '';\r\n            \r\n            const searchableText = `${name} ${description} ${category} ${brand} ${tags}`.toLowerCase();\r\n            return searchTerms.every(term => searchableText.includes(term));\r\n          } catch (filterError) {\r\n            console.warn('Error filtering product:', product, filterError);\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Apply filters with null checks\r\n      if (filters.category) {\r\n        results = results.filter(p => p?.category === filters.category);\r\n      }\r\n\r\n      if (filters.brand) {\r\n        results = results.filter(p => p?.brand === filters.brand);\r\n      }\r\n\r\n      if (filters.size) {\r\n        results = results.filter(p => Array.isArray(p?.sizes) && p.sizes.includes(filters.size));\r\n      }\r\n\r\n      if (filters.color) {\r\n        results = results.filter(p => Array.isArray(p?.colors) && p.colors.includes(filters.color));\r\n      }\r\n\r\n      if (filters.rating > 0) {\r\n        results = results.filter(p => p?.rating?.average && p.rating.average >= filters.rating);\r\n      }\r\n\r\n      if (filters.inStock) {\r\n        results = results.filter(p => p?.inStock === true);\r\n      }\r\n\r\n      if (filters.onSale) {\r\n        results = results.filter(p => p?.originalPrice && p?.price && p.originalPrice > p.price);\r\n      }\r\n\r\n      // Price range filter with null checks\r\n      if (Array.isArray(filters.priceRange) && filters.priceRange.length === 2) {\r\n        results = results.filter(p => {\r\n          const price = parseFloat(p?.price);\r\n          return !isNaN(price) && \r\n                 price >= filters.priceRange[0] && \r\n                 price <= filters.priceRange[1];\r\n        });\r\n      }\r\n\r\n      // Apply sorting\r\n      results = sortResults(results, sortBy);\r\n\r\n      setSearchResults(results || []);\r\n\r\n      // Save search to recent searches\r\n      if (query && query.trim()) {\r\n        saveRecentSearch(query.trim());\r\n      }\r\n    } catch (error) {\r\n      console.error('Search error:', error);\r\n      setSearchResults([]);\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  const sortResults = (results, sortType) => {\r\n    if (!Array.isArray(results)) {\r\n      console.warn('sortResults received invalid results:', results);\r\n      return [];\r\n    }\r\n\r\n    const sortedResults = [...results];\r\n\r\n    try {\r\n      switch (sortType) {\r\n        case 'price_low':\r\n          return sortedResults.sort((a, b) => {\r\n            const priceA = parseFloat(a?.price) || 0;\r\n            const priceB = parseFloat(b?.price) || 0;\r\n            return priceA - priceB;\r\n          });\r\n        case 'price_high':\r\n          return sortedResults.sort((a, b) => {\r\n            const priceA = parseFloat(a?.price) || 0;\r\n            const priceB = parseFloat(b?.price) || 0;\r\n            return priceB - priceA;\r\n          });\r\n        case 'rating':\r\n          return sortedResults.sort((a, b) => {\r\n            const ratingA = a?.rating?.average || 0;\r\n            const ratingB = b?.rating?.average || 0;\r\n            return ratingB - ratingA;\r\n          });\r\n        case 'newest':\r\n          return sortedResults.sort((a, b) => {\r\n            const dateA = new Date(a?.createdAt || 0);\r\n            const dateB = new Date(b?.createdAt || 0);\r\n            return dateB - dateA;\r\n          });\r\n        case 'popular':\r\n          return sortedResults.sort((a, b) => {\r\n            const countA = a?.rating?.count || 0;\r\n            const countB = b?.rating?.count || 0;\r\n            return countB - countA;\r\n          });\r\n        case 'name_asc':\r\n          return sortedResults.sort((a, b) => {\r\n            const nameA = (a?.name || '').toLowerCase();\r\n            const nameB = (b?.name || '').toLowerCase();\r\n            return nameA.localeCompare(nameB);\r\n          });\r\n        case 'name_desc':\r\n          return sortedResults.sort((a, b) => {\r\n            const nameA = (a?.name || '').toLowerCase();\r\n            const nameB = (b?.name || '').toLowerCase();\r\n            return nameB.localeCompare(nameA);\r\n          });\r\n        default:\r\n          return sortedResults; // relevance (default order)\r\n      }\r\n    } catch (sortError) {\r\n      console.error('Error sorting results:', sortError);\r\n      return results;\r\n    }\r\n  };\r\n\r\n  const saveRecentSearch = (query) => {\r\n    try {\r\n      if (!query || typeof query !== 'string' || query.trim().length === 0) {\r\n        return;\r\n      }\r\n      \r\n      const trimmedQuery = query.trim();\r\n      const currentSearches = Array.isArray(recentSearches) ? recentSearches : [];\r\n      const updated = [trimmedQuery, ...currentSearches.filter(s => s !== trimmedQuery)].slice(0, 10);\r\n      \r\n      setRecentSearches(updated);\r\n      localStorage.setItem('recentSearches', JSON.stringify(updated));\r\n    } catch (error) {\r\n      console.error('Error saving recent search:', error);\r\n    }\r\n  };\r\n\r\n  const clearRecentSearches = () => {\r\n    try {\r\n      setRecentSearches([]);\r\n      localStorage.removeItem('recentSearches');\r\n    } catch (error) {\r\n      console.error('Error clearing recent searches:', error);\r\n    }\r\n  };\r\n\r\n  const updateFilter = (filterType, value) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [filterType]: value\r\n    }));\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setFilters({\r\n      category: '',\r\n      priceRange: [0, 1000],\r\n      brand: '',\r\n      size: '',\r\n      color: '',\r\n      rating: 0,\r\n      inStock: false,\r\n      onSale: false\r\n    });\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setSearchQuery('');\r\n    setSearchResults([]);\r\n    setSuggestions([]);\r\n    clearFilters();\r\n  };\r\n\r\n  const getActiveFiltersCount = () => {\r\n    let count = 0;\r\n    if (filters.category) count++;\r\n    if (filters.brand) count++;\r\n    if (filters.size) count++;\r\n    if (filters.color) count++;\r\n    if (filters.rating > 0) count++;\r\n    if (filters.inStock) count++;\r\n    if (filters.onSale) count++;\r\n    if (filters.priceRange[0] > 0 || filters.priceRange[1] < 1000) count++;\r\n    return count;\r\n  };\r\n\r\n  const value = {\r\n    // Search state\r\n    searchQuery,\r\n    setSearchQuery,\r\n    searchResults,\r\n    searchSuggestions,\r\n    recentSearches,\r\n    isSearching,\r\n    \r\n    // Filters\r\n    filters,\r\n    updateFilter,\r\n    clearFilters,\r\n    showFilters,\r\n    setShowFilters,\r\n    filterOptions,\r\n    getActiveFiltersCount,\r\n    \r\n    // Sorting\r\n    sortBy,\r\n    setSortBy,\r\n    sortOptions,\r\n    \r\n    // Actions\r\n    performSearch,\r\n    clearSearch,\r\n    clearRecentSearches,\r\n    saveRecentSearch\r\n  };\r\n\r\n  return (\r\n    <SearchContext.Provider value={value}>\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
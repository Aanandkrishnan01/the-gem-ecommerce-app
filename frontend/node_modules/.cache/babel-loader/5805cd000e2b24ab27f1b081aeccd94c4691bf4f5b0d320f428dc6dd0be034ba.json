{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\context\\\\ReviewsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewsContext = /*#__PURE__*/createContext();\nconst reviewsReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOAD_REVIEWS':\n      return {\n        ...state,\n        reviews: action.payload,\n        loading: false\n      };\n    case 'ADD_REVIEW':\n      const newReviews = [...state.reviews, action.payload];\n      localStorage.setItem('productReviews', JSON.stringify(newReviews));\n      return {\n        ...state,\n        reviews: newReviews\n      };\n    case 'UPDATE_REVIEW':\n      const updatedReviews = state.reviews.map(review => review.id === action.payload.id ? action.payload : review);\n      localStorage.setItem('productReviews', JSON.stringify(updatedReviews));\n      return {\n        ...state,\n        reviews: updatedReviews\n      };\n    case 'DELETE_REVIEW':\n      const filteredReviews = state.reviews.filter(review => review.id !== action.payload);\n      localStorage.setItem('productReviews', JSON.stringify(filteredReviews));\n      return {\n        ...state,\n        reviews: filteredReviews\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  reviews: [],\n  loading: true\n};\nexport const ReviewsProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reviewsReducer, initialState);\n\n  // Load reviews from localStorage on app start\n  useEffect(() => {\n    const savedReviews = localStorage.getItem('productReviews');\n    if (savedReviews) {\n      try {\n        const parsedReviews = JSON.parse(savedReviews);\n        dispatch({\n          type: 'LOAD_REVIEWS',\n          payload: parsedReviews\n        });\n      } catch (error) {\n        console.error('Error loading reviews:', error);\n        dispatch({\n          type: 'LOAD_REVIEWS',\n          payload: []\n        });\n      }\n    } else {\n      // Initialize with sample reviews\n      const sampleReviews = [{\n        id: 1,\n        productId: '1',\n        userId: 'user1',\n        userName: 'John Doe',\n        rating: 5,\n        title: 'Amazing quality!',\n        comment: 'This product exceeded my expectations. Great quality and fast delivery.',\n        date: new Date().toISOString(),\n        verified: true,\n        helpful: 12,\n        notHelpful: 1\n      }, {\n        id: 2,\n        productId: '1',\n        userId: 'user2',\n        userName: 'Sarah Wilson',\n        rating: 4,\n        title: 'Good value for money',\n        comment: 'Nice product overall. Good quality but took a while to arrive.',\n        date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n        verified: true,\n        helpful: 8,\n        notHelpful: 0\n      }];\n      dispatch({\n        type: 'LOAD_REVIEWS',\n        payload: sampleReviews\n      });\n      localStorage.setItem('productReviews', JSON.stringify(sampleReviews));\n    }\n  }, []);\n  const addReview = review => {\n    const newReview = {\n      ...review,\n      id: Date.now(),\n      date: new Date().toISOString(),\n      helpful: 0,\n      notHelpful: 0\n    };\n    dispatch({\n      type: 'ADD_REVIEW',\n      payload: newReview\n    });\n  };\n  const updateReview = (reviewId, updates) => {\n    const review = state.reviews.find(r => r.id === reviewId);\n    if (review) {\n      dispatch({\n        type: 'UPDATE_REVIEW',\n        payload: {\n          ...review,\n          ...updates\n        }\n      });\n    }\n  };\n  const deleteReview = reviewId => {\n    dispatch({\n      type: 'DELETE_REVIEW',\n      payload: reviewId\n    });\n  };\n  const getProductReviews = productId => {\n    return state.reviews.filter(review => review.productId === productId.toString());\n  };\n  const getProductRating = productId => {\n    const productReviews = getProductReviews(productId);\n    if (productReviews.length === 0) return {\n      average: 0,\n      count: 0\n    };\n    const totalRating = productReviews.reduce((sum, review) => sum + review.rating, 0);\n    const average = totalRating / productReviews.length;\n    return {\n      average: Math.round(average * 10) / 10,\n      count: productReviews.length\n    };\n  };\n  const markHelpful = (reviewId, isHelpful) => {\n    const review = state.reviews.find(r => r.id === reviewId);\n    if (review) {\n      const updates = isHelpful ? {\n        helpful: review.helpful + 1\n      } : {\n        notHelpful: review.notHelpful + 1\n      };\n      updateReview(reviewId, updates);\n    }\n  };\n  const value = {\n    reviews: state.reviews,\n    loading: state.loading,\n    addReview,\n    updateReview,\n    deleteReview,\n    getProductReviews,\n    getProductRating,\n    markHelpful\n  };\n  return /*#__PURE__*/_jsxDEV(ReviewsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewsProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ReviewsProvider;\nexport const useReviews = () => {\n  _s2();\n  const context = useContext(ReviewsContext);\n  if (!context) {\n    throw new Error('useReviews must be used within a ReviewsProvider');\n  }\n  return context;\n};\n_s2(useReviews, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ReviewsContext;\nvar _c;\n$RefreshReg$(_c, \"ReviewsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","ReviewsContext","reviewsReducer","state","action","type","reviews","payload","loading","newReviews","localStorage","setItem","JSON","stringify","updatedReviews","map","review","id","filteredReviews","filter","initialState","ReviewsProvider","children","_s","dispatch","savedReviews","getItem","parsedReviews","parse","error","console","sampleReviews","productId","userId","userName","rating","title","comment","date","Date","toISOString","verified","helpful","notHelpful","now","addReview","newReview","updateReview","reviewId","updates","find","r","deleteReview","getProductReviews","toString","getProductRating","productReviews","length","average","count","totalRating","reduce","sum","Math","round","markHelpful","isHelpful","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useReviews","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/ecommerce/frontend/src/context/ReviewsContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst ReviewsContext = createContext();\r\n\r\nconst reviewsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOAD_REVIEWS':\r\n      return {\r\n        ...state,\r\n        reviews: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case 'ADD_REVIEW':\r\n      const newReviews = [...state.reviews, action.payload];\r\n      localStorage.setItem('productReviews', JSON.stringify(newReviews));\r\n      return {\r\n        ...state,\r\n        reviews: newReviews\r\n      };\r\n\r\n    case 'UPDATE_REVIEW':\r\n      const updatedReviews = state.reviews.map(review =>\r\n        review.id === action.payload.id ? action.payload : review\r\n      );\r\n      localStorage.setItem('productReviews', JSON.stringify(updatedReviews));\r\n      return {\r\n        ...state,\r\n        reviews: updatedReviews\r\n      };\r\n\r\n    case 'DELETE_REVIEW':\r\n      const filteredReviews = state.reviews.filter(review => review.id !== action.payload);\r\n      localStorage.setItem('productReviews', JSON.stringify(filteredReviews));\r\n      return {\r\n        ...state,\r\n        reviews: filteredReviews\r\n      };\r\n\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  reviews: [],\r\n  loading: true\r\n};\r\n\r\nexport const ReviewsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reviewsReducer, initialState);\r\n\r\n  // Load reviews from localStorage on app start\r\n  useEffect(() => {\r\n    const savedReviews = localStorage.getItem('productReviews');\r\n    if (savedReviews) {\r\n      try {\r\n        const parsedReviews = JSON.parse(savedReviews);\r\n        dispatch({ type: 'LOAD_REVIEWS', payload: parsedReviews });\r\n      } catch (error) {\r\n        console.error('Error loading reviews:', error);\r\n        dispatch({ type: 'LOAD_REVIEWS', payload: [] });\r\n      }\r\n    } else {\r\n      // Initialize with sample reviews\r\n      const sampleReviews = [\r\n        {\r\n          id: 1,\r\n          productId: '1',\r\n          userId: 'user1',\r\n          userName: 'John Doe',\r\n          rating: 5,\r\n          title: 'Amazing quality!',\r\n          comment: 'This product exceeded my expectations. Great quality and fast delivery.',\r\n          date: new Date().toISOString(),\r\n          verified: true,\r\n          helpful: 12,\r\n          notHelpful: 1\r\n        },\r\n        {\r\n          id: 2,\r\n          productId: '1',\r\n          userId: 'user2',\r\n          userName: 'Sarah Wilson',\r\n          rating: 4,\r\n          title: 'Good value for money',\r\n          comment: 'Nice product overall. Good quality but took a while to arrive.',\r\n          date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\r\n          verified: true,\r\n          helpful: 8,\r\n          notHelpful: 0\r\n        }\r\n      ];\r\n      dispatch({ type: 'LOAD_REVIEWS', payload: sampleReviews });\r\n      localStorage.setItem('productReviews', JSON.stringify(sampleReviews));\r\n    }\r\n  }, []);\r\n\r\n  const addReview = (review) => {\r\n    const newReview = {\r\n      ...review,\r\n      id: Date.now(),\r\n      date: new Date().toISOString(),\r\n      helpful: 0,\r\n      notHelpful: 0\r\n    };\r\n    dispatch({ type: 'ADD_REVIEW', payload: newReview });\r\n  };\r\n\r\n  const updateReview = (reviewId, updates) => {\r\n    const review = state.reviews.find(r => r.id === reviewId);\r\n    if (review) {\r\n      dispatch({ type: 'UPDATE_REVIEW', payload: { ...review, ...updates } });\r\n    }\r\n  };\r\n\r\n  const deleteReview = (reviewId) => {\r\n    dispatch({ type: 'DELETE_REVIEW', payload: reviewId });\r\n  };\r\n\r\n  const getProductReviews = (productId) => {\r\n    return state.reviews.filter(review => review.productId === productId.toString());\r\n  };\r\n\r\n  const getProductRating = (productId) => {\r\n    const productReviews = getProductReviews(productId);\r\n    if (productReviews.length === 0) return { average: 0, count: 0 };\r\n    \r\n    const totalRating = productReviews.reduce((sum, review) => sum + review.rating, 0);\r\n    const average = totalRating / productReviews.length;\r\n    \r\n    return {\r\n      average: Math.round(average * 10) / 10,\r\n      count: productReviews.length\r\n    };\r\n  };\r\n\r\n  const markHelpful = (reviewId, isHelpful) => {\r\n    const review = state.reviews.find(r => r.id === reviewId);\r\n    if (review) {\r\n      const updates = isHelpful \r\n        ? { helpful: review.helpful + 1 }\r\n        : { notHelpful: review.notHelpful + 1 };\r\n      updateReview(reviewId, updates);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    reviews: state.reviews,\r\n    loading: state.loading,\r\n    addReview,\r\n    updateReview,\r\n    deleteReview,\r\n    getProductReviews,\r\n    getProductRating,\r\n    markHelpful\r\n  };\r\n\r\n  return (\r\n    <ReviewsContext.Provider value={value}>\r\n      {children}\r\n    </ReviewsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useReviews = () => {\r\n  const context = useContext(ReviewsContext);\r\n  if (!context) {\r\n    throw new Error('useReviews must be used within a ReviewsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default ReviewsContext;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAEtC,MAAMO,cAAc,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QACL,GAAGF,KAAK;QACRG,OAAO,EAAEF,MAAM,CAACG,OAAO;QACvBC,OAAO,EAAE;MACX,CAAC;IAEH,KAAK,YAAY;MACf,MAAMC,UAAU,GAAG,CAAC,GAAGN,KAAK,CAACG,OAAO,EAAEF,MAAM,CAACG,OAAO,CAAC;MACrDG,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU,CAAC,CAAC;MAClE,OAAO;QACL,GAAGN,KAAK;QACRG,OAAO,EAAEG;MACX,CAAC;IAEH,KAAK,eAAe;MAClB,MAAMK,cAAc,GAAGX,KAAK,CAACG,OAAO,CAACS,GAAG,CAACC,MAAM,IAC7CA,MAAM,CAACC,EAAE,KAAKb,MAAM,CAACG,OAAO,CAACU,EAAE,GAAGb,MAAM,CAACG,OAAO,GAAGS,MACrD,CAAC;MACDN,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACC,cAAc,CAAC,CAAC;MACtE,OAAO;QACL,GAAGX,KAAK;QACRG,OAAO,EAAEQ;MACX,CAAC;IAEH,KAAK,eAAe;MAClB,MAAMI,eAAe,GAAGf,KAAK,CAACG,OAAO,CAACa,MAAM,CAACH,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAKb,MAAM,CAACG,OAAO,CAAC;MACpFG,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACK,eAAe,CAAC,CAAC;MACvE,OAAO;QACL,GAAGf,KAAK;QACRG,OAAO,EAAEY;MACX,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGf,KAAK;QACRK,OAAO,EAAEJ,MAAM,CAACG;MAClB,CAAC;IAEH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,MAAMiB,YAAY,GAAG;EACnBd,OAAO,EAAE,EAAE;EACXE,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMa,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACpB,KAAK,EAAEqB,QAAQ,CAAC,GAAG3B,UAAU,CAACK,cAAc,EAAEkB,YAAY,CAAC;;EAElE;EACAtB,SAAS,CAAC,MAAM;IACd,MAAM2B,YAAY,GAAGf,YAAY,CAACgB,OAAO,CAAC,gBAAgB,CAAC;IAC3D,IAAID,YAAY,EAAE;MAChB,IAAI;QACF,MAAME,aAAa,GAAGf,IAAI,CAACgB,KAAK,CAACH,YAAY,CAAC;QAC9CD,QAAQ,CAAC;UAAEnB,IAAI,EAAE,cAAc;UAAEE,OAAO,EAAEoB;QAAc,CAAC,CAAC;MAC5D,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CL,QAAQ,CAAC;UAAEnB,IAAI,EAAE,cAAc;UAAEE,OAAO,EAAE;QAAG,CAAC,CAAC;MACjD;IACF,CAAC,MAAM;MACL;MACA,MAAMwB,aAAa,GAAG,CACpB;QACEd,EAAE,EAAE,CAAC;QACLe,SAAS,EAAE,GAAG;QACdC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,UAAU;QACpBC,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE,kBAAkB;QACzBC,OAAO,EAAE,yEAAyE;QAClFC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC9BC,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE;MACd,CAAC,EACD;QACE1B,EAAE,EAAE,CAAC;QACLe,SAAS,EAAE,GAAG;QACdC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,cAAc;QACxBC,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE,sBAAsB;QAC7BC,OAAO,EAAE,gEAAgE;QACzEC,IAAI,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACK,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACJ,WAAW,CAAC,CAAC;QAClEC,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,CAAC;QACVC,UAAU,EAAE;MACd,CAAC,CACF;MACDnB,QAAQ,CAAC;QAAEnB,IAAI,EAAE,cAAc;QAAEE,OAAO,EAAEwB;MAAc,CAAC,CAAC;MAC1DrB,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACkB,aAAa,CAAC,CAAC;IACvE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,SAAS,GAAI7B,MAAM,IAAK;IAC5B,MAAM8B,SAAS,GAAG;MAChB,GAAG9B,MAAM;MACTC,EAAE,EAAEsB,IAAI,CAACK,GAAG,CAAC,CAAC;MACdN,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC9BE,OAAO,EAAE,CAAC;MACVC,UAAU,EAAE;IACd,CAAC;IACDnB,QAAQ,CAAC;MAAEnB,IAAI,EAAE,YAAY;MAAEE,OAAO,EAAEuC;IAAU,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;IAC1C,MAAMjC,MAAM,GAAGb,KAAK,CAACG,OAAO,CAAC4C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClC,EAAE,KAAK+B,QAAQ,CAAC;IACzD,IAAIhC,MAAM,EAAE;MACVQ,QAAQ,CAAC;QAAEnB,IAAI,EAAE,eAAe;QAAEE,OAAO,EAAE;UAAE,GAAGS,MAAM;UAAE,GAAGiC;QAAQ;MAAE,CAAC,CAAC;IACzE;EACF,CAAC;EAED,MAAMG,YAAY,GAAIJ,QAAQ,IAAK;IACjCxB,QAAQ,CAAC;MAAEnB,IAAI,EAAE,eAAe;MAAEE,OAAO,EAAEyC;IAAS,CAAC,CAAC;EACxD,CAAC;EAED,MAAMK,iBAAiB,GAAIrB,SAAS,IAAK;IACvC,OAAO7B,KAAK,CAACG,OAAO,CAACa,MAAM,CAACH,MAAM,IAAIA,MAAM,CAACgB,SAAS,KAAKA,SAAS,CAACsB,QAAQ,CAAC,CAAC,CAAC;EAClF,CAAC;EAED,MAAMC,gBAAgB,GAAIvB,SAAS,IAAK;IACtC,MAAMwB,cAAc,GAAGH,iBAAiB,CAACrB,SAAS,CAAC;IACnD,IAAIwB,cAAc,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO;MAAEC,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;IAEhE,MAAMC,WAAW,GAAGJ,cAAc,CAACK,MAAM,CAAC,CAACC,GAAG,EAAE9C,MAAM,KAAK8C,GAAG,GAAG9C,MAAM,CAACmB,MAAM,EAAE,CAAC,CAAC;IAClF,MAAMuB,OAAO,GAAGE,WAAW,GAAGJ,cAAc,CAACC,MAAM;IAEnD,OAAO;MACLC,OAAO,EAAEK,IAAI,CAACC,KAAK,CAACN,OAAO,GAAG,EAAE,CAAC,GAAG,EAAE;MACtCC,KAAK,EAAEH,cAAc,CAACC;IACxB,CAAC;EACH,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAACjB,QAAQ,EAAEkB,SAAS,KAAK;IAC3C,MAAMlD,MAAM,GAAGb,KAAK,CAACG,OAAO,CAAC4C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClC,EAAE,KAAK+B,QAAQ,CAAC;IACzD,IAAIhC,MAAM,EAAE;MACV,MAAMiC,OAAO,GAAGiB,SAAS,GACrB;QAAExB,OAAO,EAAE1B,MAAM,CAAC0B,OAAO,GAAG;MAAE,CAAC,GAC/B;QAAEC,UAAU,EAAE3B,MAAM,CAAC2B,UAAU,GAAG;MAAE,CAAC;MACzCI,YAAY,CAACC,QAAQ,EAAEC,OAAO,CAAC;IACjC;EACF,CAAC;EAED,MAAMkB,KAAK,GAAG;IACZ7D,OAAO,EAAEH,KAAK,CAACG,OAAO;IACtBE,OAAO,EAAEL,KAAK,CAACK,OAAO;IACtBqC,SAAS;IACTE,YAAY;IACZK,YAAY;IACZC,iBAAiB;IACjBE,gBAAgB;IAChBU;EACF,CAAC;EAED,oBACEjE,OAAA,CAACC,cAAc,CAACmE,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA7C,QAAA,EACnCA;EAAQ;IAAA+C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACjD,EAAA,CAlHWF,eAAe;AAAAoD,EAAA,GAAfpD,eAAe;AAoH5B,OAAO,MAAMqD,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,MAAMC,OAAO,GAAGhF,UAAU,CAACK,cAAc,CAAC;EAC1C,IAAI,CAAC2E,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,UAAU;AAQvB,eAAezE,cAAc;AAAC,IAAAwE,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}